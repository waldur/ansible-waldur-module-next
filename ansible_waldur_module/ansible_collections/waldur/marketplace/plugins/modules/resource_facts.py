#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.marketplace.plugins.module_utils.waldur.facts_runner import (
    FactsRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: resource_facts
short_description: Get facts about a specific resource
description: ''
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  name:
    description: The name or UUID of the resource.
    type: str
    required: true
  backend_id:
    description: Backend ID
    type: str
    required: false
  category_uuid:
    description: Filter by category uuid.
    type: str
    required: false
  created:
    description: Created after
    type: str
    required: false
  customer:
    description: Filter by customer.
    type: str
    required: false
  customer_uuid:
    description: Filter by customer uuid.
    type: str
    required: false
  downscaled:
    description: Filter by downscaled.
    type: bool
    required: false
  has_terminate_date:
    description: Has termination date
    type: bool
    required: false
  lexis_links_supported:
    description: LEXIS links supported
    type: bool
    required: false
  modified:
    description: Modified after
    type: str
    required: false
  offering:
    description: Filter by offering.
    type: str
    required: false
  offering_billable:
    description: Filter by offering billable.
    type: str
    required: false
  offering_shared:
    description: Offering shared
    type: bool
    required: false
  offering_slug:
    description: Multiple values may be separated by commas.
    type: list
    required: false
  offering_type:
    description: Filter by offering type.
    type: str
    required: false
  offering_uuid:
    description: Multiple values may be separated by commas.
    type: list
    required: false
  parent_offering_uuid:
    description: Filter by parent offering uuid.
    type: str
    required: false
  paused:
    description: Filter by paused.
    type: bool
    required: false
  project_name:
    description: Filter by project name.
    type: str
    required: false
  project_uuid:
    description: Filter by project uuid.
    type: str
    required: false
  provider_uuid:
    description: Filter by provider uuid.
    type: str
    required: false
  query:
    description: Search by resource UUID, name, backend ID, effective ID, IPs or hypervisor
    type: str
    required: false
  restrict_member_access:
    description: Filter by restrict member access.
    type: bool
    required: false
  runtime_state:
    description: Runtime state
    type: str
    required: false
  service_manager_uuid:
    description: Service Manager UUID
    type: str
    required: false
  state:
    description: Filter by state.
    type: list
    required: false
  visible_to_username:
    description: Visible to username
    type: str
    required: false
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Retrieve and print facts about resources
  hosts: localhost
  tasks:
  - name: Get facts about a specific resource
    waldur.marketplace.resource_facts:
      name: My Resource Name
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
    register: resource_info
  - name: Print the retrieved resource facts
    ansible.builtin.debug:
      var: resource_info.resources

"""

RETURN = """
resource:
  description: A list of dictionaries, where each dictionary represents a resource.
  type: list
  returned: always
  elements: dict
  contains:
    offering:
      description: Offering URL
      type: str
      returned: always
      sample: https://api.example.com/api/offering/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    offering_name:
      description: Offering name
      type: str
      returned: always
      sample: string-value
    offering_uuid:
      description: Offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    offering_description:
      description: Offering description
      type: str
      returned: always
      sample: string-value
    offering_image:
      description: Offering image URL
      type: str
      returned: always
      sample: https://api.example.com/api/offering-image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    offering_thumbnail:
      description: Offering thumbnail URL
      type: str
      returned: always
      sample: https://api.example.com/api/offering-thumbnail/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    offering_type:
      description: Offering type
      type: str
      returned: always
      sample: string-value
    offering_shared:
      description: Accessible to all customers.
      type: bool
      returned: always
      sample: true
    offering_billable:
      description: Purchase and usage is invoiced.
      type: bool
      returned: always
      sample: true
    offering_plugin_options:
      description: Public data used by specific plugin, such as storage mode for OpenStack.
      type: str
      returned: always
      sample: null
    provider_name:
      description: Provider name
      type: str
      returned: always
      sample: string-value
    provider_uuid:
      description: Provider UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    category_title:
      description: Category title
      type: str
      returned: always
      sample: string-value
    category_uuid:
      description: Category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    category_icon:
      description: Category icon URL
      type: str
      returned: always
      sample: https://api.example.com/api/category-icon/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    plan:
      description: Plan URL
      type: str
      returned: always
      sample: https://api.example.com/api/plan/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    plan_unit:
      description: Plan unit
      type: str
      returned: always
      sample: null
    plan_name:
      description: Plan name
      type: str
      returned: always
      sample: string-value
    plan_uuid:
      description: Plan UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    plan_description:
      description: Plan description
      type: str
      returned: always
      sample: string-value
    attributes:
      description: Attributes
      type: dict
      returned: always
      sample: {}
    limits:
      description: Limits
      type: dict
      returned: always
      sample: {}
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    scope:
      description: Scope
      type: str
      returned: always
      sample: string-value
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    state:
      description: State
      type: str
      returned: always
      sample: OK
    resource_uuid:
      description: Resource UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    backend_id:
      description: Backend ID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    effective_id:
      description: Effective ID
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_description:
      description: Project description
      type: str
      returned: always
      sample: string-value
    project_end_date:
      description: The date is inclusive. Once reached, all project resource will be scheduled for termination.
      type: str
      returned: always
      sample: '2023-10-01'
    project_end_date_requested_by:
      description: Project end date requested by URL
      type: str
      returned: always
      sample: https://api.example.com/api/users/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_uuid:
      description: Customer UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    offering_slug:
      description: Offering slug
      type: str
      returned: always
      sample: string-value
    parent_offering_uuid:
      description: Parent offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    parent_offering_name:
      description: Parent offering name
      type: str
      returned: always
      sample: string-value
    parent_offering_slug:
      description: Parent offering slug
      type: str
      returned: always
      sample: string-value
    parent_uuid:
      description: Parent UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    parent_name:
      description: Parent name
      type: str
      returned: always
      sample: string-value
    backend_metadata:
      description: Backend metadata
      type: str
      returned: always
      sample: null
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-resource
    slug:
      description: Slug
      type: str
      returned: always
      sample: string-value
    current_usages:
      description: Current usages
      type: dict
      returned: always
      sample: {}
    can_terminate:
      description: Can terminate
      type: bool
      returned: always
      sample: true
    report:
      description: A list of report items.
      type: list
      returned: always
      sample: []
      contains:
        header:
          description: Header
          type: str
          returned: always
          sample: string-value
        body:
          description: Body
          type: str
          returned: always
          sample: string-value
    end_date:
      description: The date is inclusive. Once reached, a resource will be scheduled for termination.
      type: str
      returned: always
      sample: '2023-10-01'
    end_date_requested_by:
      description: End date requested by URL
      type: str
      returned: always
      sample: https://api.example.com/api/users/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    username:
      description: Username
      type: str
      returned: always
      sample: alice
    limit_usage:
      description: Limit usage
      type: dict
      returned: always
      sample: {}
    downscaled:
      description: Downscaled
      type: bool
      returned: always
      sample: true
    restrict_member_access:
      description: Restrict member access
      type: bool
      returned: always
      sample: true
    paused:
      description: Paused
      type: bool
      returned: always
      sample: true
    endpoints:
      description: A list of endpoints items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-resource
        url:
          description: URL
          type: str
          returned: always
          sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    offering_customer_uuid:
      description: Offering customer UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    options:
      description: Options
      type: str
      returned: always
      sample: null
    available_actions:
      description: A list of available actions items.
      type: list
      returned: always
      sample: []
    last_sync:
      description: Last sync
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    order_in_progress:
      description: Order in progress
      type: str
      returned: always
      sample: null
    creation_order:
      description: Creation order
      type: str
      returned: always
      sample: null
    service_settings_uuid:
      description: Service settings UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    project_slug:
      description: Project slug
      type: str
      returned: always
      sample: string-value
    customer_slug:
      description: Customer slug
      type: str
      returned: always
      sample: string-value
    user_requires_reconsent:
      description: Check if the current user needs to re-consent for this resource's offering.
      type: bool
      returned: always
      sample: true

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "name": {"type": "str", "required": True},
    "backend_id": {"type": "str"},
    "category_uuid": {"type": "str"},
    "created": {"type": "str"},
    "customer": {"type": "str"},
    "customer_uuid": {"type": "str"},
    "downscaled": {"type": "bool"},
    "has_terminate_date": {"type": "bool"},
    "lexis_links_supported": {"type": "bool"},
    "modified": {"type": "str"},
    "offering": {"type": "str"},
    "offering_billable": {"type": "str"},
    "offering_shared": {"type": "bool"},
    "offering_slug": {"type": "list"},
    "offering_type": {"type": "str"},
    "offering_uuid": {"type": "list"},
    "parent_offering_uuid": {"type": "str"},
    "paused": {"type": "bool"},
    "project_name": {"type": "str"},
    "project_uuid": {"type": "str"},
    "provider_uuid": {"type": "str"},
    "query": {"type": "str"},
    "restrict_member_access": {"type": "bool"},
    "runtime_state": {"type": "str"},
    "service_manager_uuid": {"type": "str"},
    "state": {"type": "list"},
    "visible_to_username": {"type": "str"},
}

RUNNER_CONTEXT = {
    "resource_type": "resource",
    "list_url": "/api/marketplace-resources/",
    "retrieve_url": "/api/marketplace-resources/{uuid}/",
    "identifier_param": "name",
    "resolvers": {},
    "many": False,
    "inferred_filter_params": [
        "backend_id",
        "category_uuid",
        "created",
        "customer",
        "customer_uuid",
        "downscaled",
        "has_terminate_date",
        "lexis_links_supported",
        "modified",
        "offering",
        "offering_billable",
        "offering_shared",
        "offering_slug",
        "offering_type",
        "offering_uuid",
        "parent_offering_uuid",
        "paused",
        "project_name",
        "project_uuid",
        "provider_uuid",
        "query",
        "restrict_member_access",
        "runtime_state",
        "service_manager_uuid",
        "state",
        "visible_to_username",
    ],
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = FactsRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
