#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.marketplace.plugins.module_utils.waldur.crud_runner import (
    CrudRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: offering
short_description: Manage offering resources.
description: ''
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  wait:
    description: A boolean value that defines whether to wait for the async action to complete.
    default: true
    type: bool
  timeout:
    description: The maximum number of seconds to wait for the async action to complete.
    default: 600
    type: int
  interval:
    description: The interval in seconds for polling the async action status.
    default: 20
    type: int
  name:
    description: The name of the offering.
    type: str
    required: true
  description:
    type: str
    required: false
    description: Description
  full_description:
    type: str
    required: false
    description: Full description
  privacy_policy_link:
    type: str
    required: false
    description: Privacy policy link
  access_url:
    type: str
    required: false
    description: Publicly accessible offering access URL
  customer:
    type: str
    required: false
    description: The name or UUID of the customer. Customer
  category:
    type: str
    required: true
    description: The name or UUID of the category. Category
  attributes:
    type: str
    required: false
    description: Attributes
  options:
    type: dict
    required: false
    description: ''
  resource_options:
    type: dict
    required: false
    description: ''
  components:
    type: list
    required: false
    description: Components
  vendor_details:
    type: str
    required: false
    description: Vendor details
  getting_started:
    type: str
    required: false
    description: Getting started
  integration_guide:
    type: str
    required: false
    description: Integration guide
  thumbnail:
    type: str
    required: false
    description: Thumbnail
  plans:
    type: list
    required: false
    description: Plans
  type:
    type: str
    required: true
    description: Type
  shared:
    type: bool
    required: false
    description: Accessible to all customers.
  billable:
    type: bool
    required: false
    description: Purchase and usage is invoiced.
  datacite_doi:
    type: str
    required: false
    description: Datacite doi
  latitude:
    type: float
    required: false
    description: Latitude
  longitude:
    type: float
    required: false
    description: Longitude
  country:
    type: str
    required: false
    description: Country
    choices:
    - AL
    - AT
    - BE
    - BG
    - BA
    - CH
    - CY
    - CZ
    - DE
    - DK
    - ES
    - EE
    - FI
    - FR
    - GB
    - GE
    - GR
    - HR
    - HU
    - IE
    - IS
    - IT
    - LT
    - LU
    - LV
    - MC
    - MK
    - MT
    - NL
    - 'NO'
    - PL
    - PT
    - RO
    - RS
    - SK
    - SI
    - SE
    - UA
    - EU
    - ''
  backend_id:
    type: str
    required: false
    description: Backend id
  image:
    type: str
    required: false
    description: Image
  backend_metadata:
    type: str
    required: false
    description: Backend metadata
  limits:
    type: dict
    required: false
    description: Limits
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Create a new offering
  hosts: localhost
  tasks:
  - name: Add offering
    waldur.marketplace.offering:
      state: present
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      name: My-Awesome-offering
      description: A sample description created by Ansible.
      full_description: string-value
      privacy_policy_link: https://api.example.com/api/privacy-policy-link/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      access_url: https://api.example.com/api/access-url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      customer: Customer name or UUID
      category: Category name or UUID
      attributes: null
      options:
        order:
        - string-value
        options: {}
      resource_options:
        order:
        - string-value
        options: {}
      components:
      - billing_type: fixed
        type: string-value
        name: My-Awesome-offering
        description: A sample description created by Ansible.
        measured_unit: string-value
        unit_factor: 123
        limit_period: null
        limit_amount: 123
        article_code: string-value
        max_value: 123
        min_value: 123
        max_available_limit: 123
        is_boolean: true
        default_limit: 123
      vendor_details: string-value
      getting_started: string-value
      integration_guide: string-value
      thumbnail: string-value
      plans:
      - name: My-Awesome-offering
        description: A sample description created by Ansible.
        article_code: string-value
        max_amount: 123
        archived: true
        unit_price: '12.34'
        unit: month
        backend_id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      type: string-value
      shared: true
      billable: true
      datacite_doi: string-value
      latitude: 123.45
      longitude: 123.45
      country: null
      backend_id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      image: string-value
      backend_metadata: null
      limits: {}
- name: Remove an existing offering
  hosts: localhost
  tasks:
  - name: Remove offering
    waldur.marketplace.offering:
      state: absent
      name: My-Awesome-offering
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com

"""

RETURN = """
resource:
  description: The state of the offering after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-Resource
    slug:
      description: Slug
      type: str
      returned: always
      sample: string-value
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    full_description:
      description: Full description
      type: str
      returned: always
      sample: string-value
    privacy_policy_link:
      description: Privacy policy link URL
      type: str
      returned: always
      sample: https://api.example.com/api/privacy-policy-link/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    access_url:
      description: Publicly accessible offering access URL
      type: str
      returned: always
      sample: https://api.example.com/api/access-url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    endpoints:
      description: A list of endpoints items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        url:
          description: URL
          type: str
          returned: always
          sample: string-value
    roles:
      description: A list of roles items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer:
      description: Customer URL
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_uuid:
      description: Customer UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    category:
      description: Category URL
      type: str
      returned: always
      sample: https://api.example.com/api/category/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    category_uuid:
      description: Category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    category_title:
      description: Category title
      type: str
      returned: always
      sample: string-value
    attributes:
      description: Attributes
      type: str
      returned: always
      sample: null
    options:
      description: Options
      type: dict
      returned: always
      sample: {}
      contains:
        order:
          description: A list of order items.
          type: list
          returned: always
          sample: []
        options:
          description: Options
          type: dict
          returned: always
          sample: {}
    resource_options:
      description: Resource options
      type: dict
      returned: always
      sample: {}
      contains:
        order:
          description: A list of order items.
          type: list
          returned: always
          sample: []
        options:
          description: Options
          type: dict
          returned: always
          sample: {}
    components:
      description: A list of components items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        billing_type:
          description: Billing type
          type: str
          returned: always
          sample: fixed
        type:
          description: Unique internal name of the measured unit, for example floating_ip.
          type: str
          returned: always
          sample: string-value
        name:
          description: Display name for the measured unit, for example, Floating IP.
          type: str
          returned: always
          sample: My-Awesome-Resource
        description:
          description: Description
          type: str
          returned: always
          sample: A sample description created by Ansible.
        measured_unit:
          description: Unit of measurement, for example, GB.
          type: str
          returned: always
          sample: string-value
        unit_factor:
          description: The conversion factor from backend units to measured_unit
          type: int
          returned: always
          sample: 123
        limit_period:
          description: Limit period
          type: str
          returned: always
          sample: null
        limit_amount:
          description: Limit amount
          type: int
          returned: always
          sample: 123
        article_code:
          description: Article code
          type: str
          returned: always
          sample: string-value
        max_value:
          description: Max value
          type: int
          returned: always
          sample: 123
        min_value:
          description: Min value
          type: int
          returned: always
          sample: 123
        max_available_limit:
          description: Max available limit
          type: int
          returned: always
          sample: 123
        is_boolean:
          description: Is boolean
          type: bool
          returned: always
          sample: true
        default_limit:
          description: Default limit
          type: int
          returned: always
          sample: 123
        factor:
          description: Factor
          type: int
          returned: always
          sample: 123
        is_builtin:
          description: Is builtin
          type: bool
          returned: always
          sample: true
    plugin_options:
      description: Plugin options
      type: str
      returned: always
      sample: null
    secret_options:
      description: Secret options
      type: str
      returned: always
      sample: '********'
    service_attributes:
      description: Service attributes
      type: dict
      returned: always
      sample: {}
    state:
      description: State
      type: str
      returned: always
      sample: OK
    vendor_details:
      description: Vendor details
      type: str
      returned: always
      sample: string-value
    getting_started:
      description: Getting started
      type: str
      returned: always
      sample: string-value
    integration_guide:
      description: Integration guide
      type: str
      returned: always
      sample: string-value
    thumbnail:
      description: Thumbnail URL
      type: str
      returned: always
      sample: https://api.example.com/api/thumbnail/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    order_count:
      description: Order count
      type: int
      returned: always
      sample: 123
    plans:
      description: A list of plans items.
      type: list
      returned: always
      sample: []
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        description:
          description: Description
          type: str
          returned: always
          sample: A sample description created by Ansible.
        article_code:
          description: Article code
          type: str
          returned: always
          sample: string-value
        max_amount:
          description: Maximum number of plans that could be active. Plan is disabled when maximum amount is reached.
          type: int
          returned: always
          sample: 123
        archived:
          description: Forbids creation of new resources.
          type: bool
          returned: always
          sample: true
        is_active:
          description: Is active
          type: bool
          returned: always
          sample: true
        unit_price:
          description: Unit price
          type: str
          returned: always
          sample: '12.34'
        unit:
          description: Unit
          type: str
          returned: always
          sample: month
        init_price:
          description: Init price
          type: float
          returned: always
          sample: 123.45
        switch_price:
          description: Switch price
          type: float
          returned: always
          sample: 123.45
        backend_id:
          description: Backend ID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        organization_groups:
          description: A list of organization groups items.
          type: list
          returned: always
          sample: []
          contains:
            uuid:
              description: UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            url:
              description: URL URL
              type: str
              returned: always
              sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            name:
              description: Name
              type: str
              returned: always
              sample: My-Awesome-Resource
            parent_uuid:
              description: Parent UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            parent_name:
              description: Parent name
              type: str
              returned: always
              sample: string-value
            parent:
              description: Parent URL
              type: str
              returned: always
              sample: https://api.example.com/api/parent/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            customers_count:
              description: Customers count
              type: int
              returned: always
              sample: 123
        prices:
          description: Prices
          type: dict
          returned: always
          sample: {}
        future_prices:
          description: Future prices
          type: dict
          returned: always
          sample: {}
        quotas:
          description: Quotas
          type: dict
          returned: always
          sample: {}
        resources_count:
          description: Resources count
          type: int
          returned: always
          sample: 123
        plan_type:
          description: Plan type
          type: str
          returned: always
          sample: string-value
        minimal_price:
          description: Minimal price
          type: float
          returned: always
          sample: 123.45
    screenshots:
      description: A list of screenshots items.
      type: list
      returned: always
      sample: []
      contains:
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        description:
          description: Description
          type: str
          returned: always
          sample: A sample description created by Ansible.
        image:
          description: Image URL
          type: str
          returned: always
          sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        thumbnail:
          description: Thumbnail URL
          type: str
          returned: always
          sample: https://api.example.com/api/thumbnail/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        created:
          description: Created
          type: str
          returned: always
          sample: '2023-10-01T12:00:00Z'
    type:
      description: Type
      type: str
      returned: always
      sample: string-value
    shared:
      description: Accessible to all customers.
      type: bool
      returned: always
      sample: true
    billable:
      description: Purchase and usage is invoiced.
      type: bool
      returned: always
      sample: true
    scope:
      description: Scope
      type: str
      returned: always
      sample: string-value
    scope_uuid:
      description: Scope UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    scope_name:
      description: Scope name
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    scope_state:
      description: Scope state
      type: str
      returned: always
      sample: null
    scope_error_message:
      description: Scope error message
      type: str
      returned: always
      sample: string-value
    files:
      description: A list of files items.
      type: list
      returned: always
      sample: []
      contains:
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        created:
          description: Created
          type: str
          returned: always
          sample: '2023-10-01T12:00:00Z'
        file:
          description: File URL
          type: str
          returned: always
          sample: https://api.example.com/api/file/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    quotas:
      description: A list of quotas items.
      type: list
      returned: always
      sample: []
      contains:
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        usage:
          description: Usage
          type: int
          returned: always
          sample: 123
        limit:
          description: Limit
          type: int
          returned: always
          sample: 123
    paused_reason:
      description: Paused reason
      type: str
      returned: always
      sample: string-value
    datacite_doi:
      description: Datacite doi
      type: str
      returned: always
      sample: string-value
    citation_count:
      description: Number of citations of a DOI
      type: int
      returned: always
      sample: 123
    latitude:
      description: Latitude
      type: float
      returned: always
      sample: 123.45
    longitude:
      description: Longitude
      type: float
      returned: always
      sample: 123.45
    country:
      description: Country
      type: str
      returned: always
      sample: null
    backend_id:
      description: Backend ID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    organization_groups:
      description: A list of organization groups items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        parent_uuid:
          description: Parent UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        parent_name:
          description: Parent name
          type: str
          returned: always
          sample: string-value
        parent:
          description: Parent URL
          type: str
          returned: always
          sample: https://api.example.com/api/parent/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        customers_count:
          description: Customers count
          type: int
          returned: always
          sample: 123
    image:
      description: Image URL
      type: str
      returned: always
      sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    total_customers:
      description: Total customers
      type: int
      returned: always
      sample: 123
    total_cost:
      description: Total cost
      type: int
      returned: always
      sample: 123
    total_cost_estimated:
      description: Total cost estimated
      type: int
      returned: always
      sample: 123
    parent_description:
      description: Parent description
      type: str
      returned: always
      sample: string-value
    parent_uuid:
      description: Parent UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    parent_name:
      description: Parent name
      type: str
      returned: always
      sample: string-value
    backend_metadata:
      description: Backend metadata
      type: str
      returned: always
      sample: null
    has_compliance_requirements:
      description: Has compliance requirements
      type: bool
      returned: always
      sample: true
commands:
  description: A list of HTTP requests that were made (or would be made in check mode) to execute the task.
  type: list
  returned: when changed
  elements: dict
  contains:
    method:
      description: The HTTP method used (e.g., POST, PATCH, DELETE).
      type: str
      sample: POST
    url:
      description: The fully qualified URL of the API endpoint.
      type: str
      sample: https://api.example.com/api/projects/
    description:
      description: A human-readable summary of the command's purpose.
      type: str
      sample: Create new project
    body:
      description: The JSON payload sent with the request. Only present for methods with a body.
      type: dict
      returned: if applicable
      sample:
        name: My-Awesome-Project

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "choices": ["present", "absent"], "default": "present"},
    "wait": {"type": "bool", "default": True},
    "timeout": {"type": "int", "default": 600},
    "interval": {"type": "int", "default": 20},
    "name": {"type": "str", "required": True},
    "description": {"type": "str"},
    "full_description": {"type": "str"},
    "privacy_policy_link": {"type": "str"},
    "access_url": {"type": "str"},
    "customer": {"type": "str"},
    "category": {"type": "str", "required": True},
    "attributes": {"type": "str"},
    "options": {"type": "dict"},
    "resource_options": {"type": "dict"},
    "components": {"type": "list"},
    "vendor_details": {"type": "str"},
    "getting_started": {"type": "str"},
    "integration_guide": {"type": "str"},
    "thumbnail": {"type": "str"},
    "plans": {"type": "list"},
    "type": {"type": "str", "required": True},
    "shared": {"type": "bool"},
    "billable": {"type": "bool"},
    "datacite_doi": {"type": "str"},
    "latitude": {"type": "float"},
    "longitude": {"type": "float"},
    "country": {
        "type": "str",
        "choices": [
            "AL",
            "AT",
            "BE",
            "BG",
            "BA",
            "CH",
            "CY",
            "CZ",
            "DE",
            "DK",
            "ES",
            "EE",
            "FI",
            "FR",
            "GB",
            "GE",
            "GR",
            "HR",
            "HU",
            "IE",
            "IS",
            "IT",
            "LT",
            "LU",
            "LV",
            "MC",
            "MK",
            "MT",
            "NL",
            "NO",
            "PL",
            "PT",
            "RO",
            "RS",
            "SK",
            "SI",
            "SE",
            "UA",
            "EU",
            "",
        ],
    },
    "backend_id": {"type": "str"},
    "image": {"type": "str"},
    "backend_metadata": {"type": "str"},
    "limits": {"type": "dict"},
}

RUNNER_CONTEXT = {
    "resource_type": "offering",
    "check_url": "/api/marketplace-provider-offerings/",
    "check_filter_keys": {},
    "list_path": "/api/marketplace-provider-offerings/",
    "create_path": "/api/marketplace-provider-offerings/",
    "destroy_path": "/api/marketplace-provider-offerings/{uuid}/",
    "update_path": None,
    "model_param_names": [
        "category",
        "customer",
        "access_url",
        "attributes",
        "backend_id",
        "backend_metadata",
        "billable",
        "components",
        "country",
        "datacite_doi",
        "description",
        "full_description",
        "getting_started",
        "image",
        "integration_guide",
        "latitude",
        "limits",
        "longitude",
        "name",
        "options",
        "plans",
        "privacy_policy_link",
        "resource_options",
        "shared",
        "thumbnail",
        "type",
        "vendor_details",
    ],
    "path_param_maps": {},
    "update_fields": [],
    "update_actions": {},
    "resolvers": {
        "category": {
            "url": "/api/marketplace-categories/",
            "error_message": None,
            "filter_by": [],
        },
        "customer": {"url": "/api/customers/", "error_message": None, "filter_by": []},
    },
    "resolver_order": ["category", "customer"],
    "resource_detail_path": "/api/marketplace-provider-offerings/{uuid}/",
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = CrudRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
