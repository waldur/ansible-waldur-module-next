#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.openstack.plugins.module_utils.waldur.facts_runner import (
    FactsRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: subnet_facts
short_description: Manage subnet_facts
description:
- Manage subnet_facts
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  name:
    name: name
    type: str
    required: false
    description: The name or UUID of the subnet.
  tenant:
    name: tenant
    type: str
    required: false
    description: ''
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Get a subnet facts
  hosts: localhost
  tasks:
  - name: Get a subnet
    waldur.openstack.subnet_facts:
      access_token: some_value
      api_url: some_value
      name: Subnet Name or UUID
      tenant: some_value

"""

RETURN = """
resource:
  description: A list of dictionaries describing the found subnets.
  type: list
  returned: on success
  elements: dict
  contains:
    description: A dictionary describing a single subnet.
    type: dict
    returned: always
    contains:
      url:
        description: Url
        type: str
        returned: always
        sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      uuid:
        description: Uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      name:
        description: Name
        type: str
        returned: always
        sample: My Awesome Resource
      description:
        description: Description
        type: str
        returned: always
        sample: This is a sample description for the resource.
      service_name:
        description: Service name
        type: str
        returned: always
        sample: string-value
      service_settings:
        description: Service settings
        type: str
        returned: always
        sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      service_settings_uuid:
        description: Service settings uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      service_settings_state:
        description: Service settings state
        type: str
        returned: always
        sample: string-value
      service_settings_error_message:
        description: Service settings error message
        type: str
        returned: always
        sample: string-value
      project:
        description: Project
        type: str
        returned: always
        sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      project_name:
        description: Project name
        type: str
        returned: always
        sample: Internal Research Project
      project_uuid:
        description: Project uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      customer:
        description: Customer
        type: str
        returned: always
        sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      customer_name:
        description: Customer name
        type: str
        returned: always
        sample: Big Corp Inc.
      customer_native_name:
        description: Customer native name
        type: str
        returned: always
        sample: string-value
      customer_abbreviation:
        description: Customer abbreviation
        type: str
        returned: always
        sample: string-value
      error_message:
        description: Error message
        type: str
        returned: always
        sample: string-value
      error_traceback:
        description: Error traceback
        type: str
        returned: always
        sample: string-value
      resource_type:
        description: Resource type
        type: str
        returned: always
        sample: string-value
      state:
        description: ''
        type: str
        returned: always
        sample: CREATION_SCHEDULED
      created:
        description: Created
        type: str
        returned: always
        sample: '2023-10-01T12:00:00Z'
      modified:
        description: Modified
        type: str
        returned: always
        sample: '2023-10-01T12:00:00Z'
      backend_id:
        description: Backend id
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      access_url:
        description: Access url
        type: str
        returned: always
        sample: string-value
      tenant:
        description: Tenant
        type: str
        returned: always
        sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      tenant_name:
        description: Tenant name
        type: str
        returned: always
        sample: string-value
      network:
        description: Network
        type: str
        returned: always
        sample: https://api.example.com/api/network/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      network_name:
        description: Network name
        type: str
        returned: always
        sample: string-value
      cidr:
        description: Cidr
        type: str
        returned: always
        sample: 192.168.1.0/24
      gateway_ip:
        description: Gateway ip
        type: str
        returned: always
        sample: 192.168.1.1
      disable_gateway:
        description: Disable gateway
        type: bool
        returned: always
        sample: 192.168.1.1
      allocation_pools:
        description: Allocation pools
        type: list
        returned: always
        sample: []
        contains:
          start:
            description: Start
            type: str
            returned: always
            sample: string-value
          end:
            description: End
            type: str
            returned: always
            sample: string-value
      ip_version:
        description: Ip version
        type: int
        returned: always
        sample: 123
      enable_dhcp:
        description: Enable dhcp
        type: bool
        returned: always
        sample: true
      dns_nameservers:
        description: Dns nameservers
        type: list
        returned: always
        sample: []
      host_routes:
        description: Host routes
        type: list
        returned: always
        sample: []
        contains:
          destination:
            description: Destination
            type: str
            returned: always
            sample: string-value
          nexthop:
            description: Nexthop
            type: str
            returned: always
            sample: string-value
      is_connected:
        description: Is subnet connected to the default tenant router.
        type: bool
        returned: always
        sample: true
      marketplace_offering_uuid:
        description: Marketplace offering uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      marketplace_offering_name:
        description: Marketplace offering name
        type: str
        returned: always
        sample: string-value
      marketplace_offering_plugin_options:
        description: Marketplace offering plugin options
        type: dict
        returned: always
        sample: {}
      marketplace_category_uuid:
        description: Marketplace category uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      marketplace_category_name:
        description: Marketplace category name
        type: str
        returned: always
        sample: string-value
      marketplace_resource_uuid:
        description: Marketplace resource uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      marketplace_plan_uuid:
        description: Marketplace plan uuid
        type: str
        returned: always
        sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      marketplace_resource_state:
        description: Marketplace resource state
        type: str
        returned: always
        sample: string-value
      is_usage_based:
        description: Is usage based
        type: bool
        returned: always
        sample: true
      is_limit_based:
        description: Is limit based
        type: bool
        returned: always
        sample: true

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "required": True},
    "api_url": {"type": "str", "required": True},
    "name": {"type": "str", "required": False},
    "tenant": {"type": "str", "required": False},
}

RUNNER_CONTEXT = {
    "module_type": "facts",
    "resource_type": "subnet",
    "list_url": "/api/openstack-subnets/",
    "retrieve_url": "/api/openstack-subnets/{uuid}/",
    "identifier_param": "name",
    "context_resolvers": {
        "tenant": {
            "url": "/api/openstack-tenants/",
            "error_message": "Tenant '{value}' not found.",
            "filter_key": "tenant_uuid",
        }
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = FactsRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
