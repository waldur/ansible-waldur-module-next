#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.openstack.plugins.module_utils.waldur.crud_runner import (
    CrudRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: port
short_description: Manage OpenStack Ports in Waldur.
description: 'When the resource already exists, the following fields can be updated: security_groups.'
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  wait:
    description: A boolean value that defines whether to wait for the async action to complete.
    default: true
    type: bool
  timeout:
    description: The maximum number of seconds to wait for the async action to complete.
    default: 600
    type: int
  interval:
    description: The interval in seconds for polling the async action status.
    default: 20
    type: int
  name:
    description:
    - The name of the OpenStack port.
    - This attribute cannot be updated.
    type: str
    required: true
  tenant:
    description: The name or UUID of the parent tenant for filtering.
    type: str
    required: false
  description:
    type: str
    required: false
    description:
    - Description
    - This attribute cannot be updated.
  fixed_ips:
    type: list
    required: false
    description:
    - Fixed ips
    - This attribute cannot be updated.
  mac_address:
    type: str
    required: false
    description:
    - MAC address of the port
    - This attribute cannot be updated.
  allowed_address_pairs:
    type: list
    required: false
    description:
    - Allowed address pairs
    - This attribute cannot be updated.
  network:
    type: str
    required: false
    description:
    - The name or UUID of the network. Network to which this port belongs
    - This attribute cannot be updated.
  port_security_enabled:
    type: bool
    required: false
    description:
    - If True, security groups and rules will be applied to this port
    - This attribute cannot be updated.
  security_groups:
    type: list
    required: false
    description: The name or UUID of the security_groups. Security groups
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Create a new OpenStack port
  hosts: localhost
  tasks:
  - name: Add OpenStack port
    waldur.openstack.port:
      state: present
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      name: My-Awesome-OpenStack-port
      description: A sample description created by Ansible.
      fixed_ips:
      - ip_address: 192.168.42.50
        subnet_id: string-value
      mac_address: 00:1B:44:11:3A:B7
      allowed_address_pairs:
      - ip_address: 192.168.42.50
        mac_address: 00:1B:44:11:3A:B7
      network: Network name or UUID
      port_security_enabled: true
      security_groups:
      - Security groups name or UUID
- name: Remove an existing OpenStack port
  hosts: localhost
  tasks:
  - name: Remove OpenStack port
    waldur.openstack.port:
      state: absent
      name: My-Awesome-OpenStack-port
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com

"""

RETURN = """
resource:
  description: The state of the OpenStack port after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-Resource
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    service_name:
      description: Service name
      type: str
      returned: always
      sample: string-value
    service_settings:
      description: Service settings URL
      type: str
      returned: always
      sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_settings_uuid:
      description: Service settings UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    service_settings_state:
      description: Service settings state
      type: str
      returned: always
      sample: string-value
    service_settings_error_message:
      description: Service settings error message
      type: str
      returned: always
      sample: string-value
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer:
      description: Customer URL
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_uuid:
      description: Customer UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    state:
      description: State
      type: str
      returned: always
      sample: OK
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    backend_id:
      description: Port ID in OpenStack
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    access_url:
      description: Access URL
      type: str
      returned: always
      sample: string-value
    fixed_ips:
      description: A list of fixed ips items.
      type: list
      returned: always
      sample: []
      contains:
        ip_address:
          description: IP address to assign to the port
          type: str
          returned: always
          sample: 192.168.42.50
        subnet_id:
          description: ID of the subnet in which to assign the IP address
          type: str
          returned: always
          sample: string-value
    mac_address:
      description: MAC address of the port
      type: str
      returned: always
      sample: 00:1B:44:11:3A:B7
    allowed_address_pairs:
      description: A list of allowed address pairs items.
      type: list
      returned: always
      sample: []
      contains:
        mac_address:
          description: Mac address
          type: str
          returned: always
          sample: 00:1B:44:11:3A:B7
    tenant:
      description: OpenStack tenant this port belongs to
      type: str
      returned: always
      sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    tenant_name:
      description: Tenant name
      type: str
      returned: always
      sample: string-value
    tenant_uuid:
      description: Tenant UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    network:
      description: Network to which this port belongs
      type: str
      returned: always
      sample: https://api.example.com/api/network/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    network_name:
      description: Network name
      type: str
      returned: always
      sample: string-value
    network_uuid:
      description: Network UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    floating_ips:
      description: A list of floating ips items.
      type: list
      returned: always
      sample:
      - 8.8.8.8
    device_id:
      description: ID of device (instance, router etc) to which this port is connected
      type: str
      returned: always
      sample: string-value
    device_owner:
      description: Entity that uses this port (e.g. network:router_interface)
      type: str
      returned: always
      sample: string-value
    port_security_enabled:
      description: If True, security groups and rules will be applied to this port
      type: bool
      returned: always
      sample: true
    security_groups:
      description: A list of security groups items.
      type: list
      returned: always
      sample:
      - web-server-sg
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    admin_state_up:
      description: Administrative state of the port. If down, port does not forward packets
      type: bool
      returned: always
      sample: true
    status:
      description: Port status in OpenStack (e.g. ACTIVE, DOWN)
      type: str
      returned: always
      sample: OK
    marketplace_offering_uuid:
      description: Marketplace offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_offering_name:
      description: Marketplace offering name
      type: str
      returned: always
      sample: string-value
    marketplace_offering_plugin_options:
      description: Marketplace offering plugin options
      type: dict
      returned: always
      sample: {}
    marketplace_category_uuid:
      description: Marketplace category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_category_name:
      description: Marketplace category name
      type: str
      returned: always
      sample: string-value
    marketplace_resource_uuid:
      description: Marketplace resource UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_plan_uuid:
      description: Marketplace plan UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_resource_state:
      description: Marketplace resource state
      type: str
      returned: always
      sample: string-value
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true
commands:
  description: A list of HTTP requests that were made (or would be made in check mode) to execute the task.
  type: list
  returned: when changed
  elements: dict
  contains:
    method:
      description: The HTTP method used (e.g., POST, PATCH, DELETE).
      type: str
      sample: POST
    url:
      description: The fully qualified URL of the API endpoint.
      type: str
      sample: https://api.example.com/api/projects/
    description:
      description: A human-readable summary of the command's purpose.
      type: str
      sample: Create new project
    body:
      description: The JSON payload sent with the request. Only present for methods with a body.
      type: dict
      returned: if applicable
      sample:
        name: My-Awesome-Project

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "choices": ["present", "absent"], "default": "present"},
    "wait": {"type": "bool", "default": True},
    "timeout": {"type": "int", "default": 600},
    "interval": {"type": "int", "default": 20},
    "name": {"type": "str", "required": True},
    "tenant": {"type": "str"},
    "description": {"type": "str"},
    "fixed_ips": {"type": "list"},
    "mac_address": {"type": "str"},
    "allowed_address_pairs": {"type": "list"},
    "network": {"type": "str"},
    "port_security_enabled": {"type": "bool"},
    "security_groups": {"type": "list"},
}

RUNNER_CONTEXT = {
    "resource_type": "OpenStack port",
    "check_url": "/api/openstack-ports/",
    "check_filter_keys": {"tenant": "tenant_uuid"},
    "list_path": "/api/openstack-ports/",
    "create_path": "/api/openstack-ports/",
    "destroy_path": "/api/openstack-ports/{uuid}/",
    "update_path": None,
    "required_for_create": ["name"],
    "model_param_names": [
        "network",
        "security_groups",
        "allowed_address_pairs",
        "description",
        "fixed_ips",
        "mac_address",
        "name",
        "port_security_enabled",
    ],
    "path_param_maps": {},
    "update_fields": [],
    "update_actions": {
        "update_security_groups": {
            "path": "/api/openstack-ports/{uuid}/update_security_groups/",
            "param": "security_groups",
            "compare_key": "security_groups",
            "wrap_in_object": True,
            "idempotency_keys": [],
            "defaults_map": {},
        }
    },
    "resolvers": {
        "tenant": {
            "url": "/api/openstack-tenants/",
            "error_message": None,
            "filter_by": [],
        },
        "network": {
            "url": "/api/openstack-networks/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "tenant",
                    "source_key": "uuid",
                    "target_key": "tenant_uuid",
                }
            ],
        },
        "security_groups": {
            "url": "/api/openstack-security-groups/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "tenant",
                    "source_key": "uuid",
                    "target_key": "tenant_uuid",
                }
            ],
        },
    },
    "resolver_order": ["security_groups", "network", "tenant"],
    "resource_detail_path": "/api/openstack-ports/{uuid}/",
    "wait_config": {
        "ok_states": ["OK"],
        "erred_states": ["ERRED"],
        "state_field": "state",
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = CrudRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
