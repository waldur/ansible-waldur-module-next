#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.openstack.plugins.module_utils.waldur.order_runner import (
    OrderRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: instance
short_description: Create, update or delete a instance via the marketplace.
description: 'When the resource already exists, the following fields can be updated: description, floating_ips, name, ports, security_groups.'
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  wait:
    description: A boolean value that defines whether to wait for the async action to complete.
    default: true
    type: bool
  timeout:
    description: The maximum number of seconds to wait for the async action to complete.
    default: 600
    type: int
  interval:
    description: The interval in seconds for polling the async action status.
    default: 20
    type: int
  name:
    type: str
    required: true
    description: Name
  project:
    type: str
    required: true
    description: The name or UUID of the project.
  offering:
    type: str
    required: true
    description: The name or UUID of the marketplace offering.
  plan:
    type: str
    required: false
    description: URL of the marketplace plan.
  description:
    type: str
    required: false
    description: Description
  flavor:
    type: str
    required: true
    description: The flavor to use for the instance
  image:
    type: str
    required: true
    description: The OS image to use for the instance
  ports:
    type: list
    required: true
    description: Network ports to attach to the instance
    elements: dict
    suboptions:
      fixed_ips:
        type: list
        required: false
        description: A list of fixed ips names or UUIDs.
        elements: dict
        suboptions:
          ip_address:
            type: str
            required: true
            description: IP address to assign to the port
          subnet_id:
            type: str
            required: true
            description: ID of the subnet in which to assign the IP address
      subnet:
        type: str
        required: false
        description: Subnet to which this port belongs
      port:
        type: str
        required: false
        description: Port URL
  floating_ips:
    type: list
    required: false
    description: Floating IPs to assign to the instance
    elements: dict
    suboptions:
      subnet:
        type: str
        required: true
        description: The name or UUID of the subnet.
  system_volume_size:
    type: int
    required: true
    description: Size of the system volume in MiB. Minimum size is 1024 MiB (1 GiB). The value should be provided in GiB and will be converted to MiB. The value should be provided in GiB and will be converted to MiB.
  system_volume_type:
    type: str
    required: false
    description: Volume type for the system volume
  data_volume_size:
    type: int
    required: false
    description: Size of the data volume in MiB. Minimum size is 1024 MiB (1 GiB). The value should be provided in GiB and will be converted to MiB. The value should be provided in GiB and will be converted to MiB.
  data_volume_type:
    type: str
    required: false
    description: Volume type for the data volume
  ssh_public_key:
    type: str
    required: false
    description: The name or UUID of the SSH public key.
  user_data:
    type: str
    required: false
    description: Additional data that will be added to instance on provisioning
  availability_zone:
    type: str
    required: false
    description: Availability zone where this instance is located
  connect_directly_to_external_network:
    type: bool
    required: false
    description: If True, instance will be connected directly to external network
  data_volumes:
    type: list
    required: false
    description: Additional data volumes to attach to the instance
    elements: dict
    suboptions:
      size:
        type: int
        required: true
        description: Size
      volume_type:
        type: str
        required: false
        description: Volume type URL
  security_groups:
    type: list
    required: false
    description: Security groups to attach to the instance
    elements: str
  termination_action:
    type: str
    required: false
    choices:
    - destroy
    - force_destroy
    description: Force destroy avoids to bypass standard validations and directly deletes the instance.
  delete_volumes:
    type: str
    required: false
    description: If true, delete attached volumes on termination.
  release_floating_ips:
    type: str
    required: false
    description: If true, release associated floating IPs on termination.
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Create a new instance
  hosts: localhost
  tasks:
  - name: Add instance
    waldur.openstack.instance:
      state: present
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      project: Project Name or UUID
      offering: Offering Name or UUID
      name: My-Awesome-instance
      description: A sample description created by Ansible.
      flavor: Flavor name or UUID
      image: Image name or UUID
      ports:
      - fixed_ips:
        - ip_address: 192.168.42.50
          subnet_id: string-value
        subnet: Subnet name or UUID
        port: string-value
      floating_ips:
      - subnet: Subnet name or UUID
      system_volume_size: 123
      system_volume_type: System volume type name or UUID
      data_volume_size: 123
      data_volume_type: Data volume type name or UUID
      ssh_public_key: Ssh public key name or UUID
      user_data: "#cloud-config\npackages:\n  - nginx"
      availability_zone: Availability zone name or UUID
      connect_directly_to_external_network: true
      data_volumes:
      - size: 100
        volume_type: string-value
      security_groups:
      - Security groups name or UUID
- name: Remove an existing instance
  hosts: localhost
  tasks:
  - name: Remove instance
    waldur.openstack.instance:
      state: absent
      name: My-Awesome-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      project: Project Name or UUID
      offering: Offering Name or UUID
      termination_action: destroy
      delete_volumes: null
      release_floating_ips: 8.8.8.8

"""

RETURN = """
resource:
  description: A dictionary describing the instance after a successful 'present' state.
  type: dict
  returned: on success when state is 'present'
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-Resource
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    service_name:
      description: Service name
      type: str
      returned: always
      sample: string-value
    service_settings:
      description: OpenStack provider settings
      type: str
      returned: always
      sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_settings_uuid:
      description: Service settings UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    service_settings_state:
      description: Service settings state
      type: str
      returned: always
      sample: string-value
    service_settings_error_message:
      description: Service settings error message
      type: str
      returned: always
      sample: string-value
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer:
      description: Customer URL
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    state:
      description: State
      type: str
      returned: always
      sample: OK
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    backend_id:
      description: Instance ID in the OpenStack backend
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    access_url:
      description: Access URL
      type: str
      returned: always
      sample: string-value
    start_time:
      description: Start time
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    cores:
      description: Number of cores in a VM
      type: int
      returned: always
      sample: 2
    ram:
      description: Memory size in MiB
      type: int
      returned: always
      sample: 2048
    disk:
      description: Disk size in MiB
      type: int
      returned: always
      sample: 20480
    min_ram:
      description: Minimum memory size in MiB
      type: int
      returned: always
      sample: 2048
    min_disk:
      description: Minimum disk size in MiB
      type: int
      returned: always
      sample: 20480
    user_data:
      description: Additional data that will be added to instance on provisioning
      type: str
      returned: always
      sample: "#cloud-config\npackages:\n  - nginx"
    external_ips:
      description: A list of external ips items.
      type: list
      returned: always
      sample: []
    internal_ips:
      description: A list of internal ips items.
      type: list
      returned: always
      sample: []
    latitude:
      description: Latitude
      type: float
      returned: always
      sample: 123.45
    longitude:
      description: Longitude
      type: float
      returned: always
      sample: 123.45
    key_name:
      description: Key name
      type: str
      returned: always
      sample: string-value
    key_fingerprint:
      description: Key fingerprint
      type: str
      returned: always
      sample: string-value
    image_name:
      description: Image name
      type: str
      returned: always
      sample: string-value
    flavor_disk:
      description: Flavor disk size in MiB
      type: int
      returned: always
      sample: 20480
    flavor_name:
      description: Name of the flavor used by this instance
      type: str
      returned: always
      sample: string-value
    volumes:
      description: List of volumes attached to the instance
      type: list
      returned: always
      sample: []
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        image_name:
          description: Name of the image this volume was created from
          type: str
          returned: always
          sample: string-value
        state:
          description: State
          type: str
          returned: always
          sample: OK
        bootable:
          description: Indicates if this volume can be used to boot an instance
          type: bool
          returned: always
          sample: true
        size:
          description: Size in MiB
          type: int
          returned: always
          sample: 100
        device:
          description: Name of volume as instance device e.g. /dev/vdb.
          type: str
          returned: always
          sample: string-value
        resource_type:
          description: Resource type
          type: str
          returned: always
          sample: string-value
        type:
          description: Type of the volume (e.g. SSD, HDD)
          type: str
          returned: always
          sample: https://api.example.com/api/type/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        type_name:
          description: Type name
          type: str
          returned: always
          sample: string-value
        marketplace_resource_uuid:
          description: Marketplace resource UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    security_groups:
      description: List of security groups to apply to the instance
      type: list
      returned: always
      sample:
      - web-server-sg
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        rules:
          description: A list of rules items.
          type: list
          returned: always
          sample: []
          contains:
            ethertype:
              description: IP protocol version - either 'IPv4' or 'IPv6'
              type: str
              returned: always
              sample: null
            direction:
              description: Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
              type: str
              returned: always
              sample: null
            protocol:
              description: The network protocol (TCP, UDP, ICMP, or empty for any protocol)
              type: str
              returned: always
              sample: null
            from_port:
              description: Starting port number in the range (1-65535)
              type: int
              returned: always
              sample: 8080
            to_port:
              description: Ending port number in the range (1-65535)
              type: int
              returned: always
              sample: 8080
            cidr:
              description: CIDR notation for the source/destination network address range
              type: str
              returned: always
              sample: 192.168.1.0/24
            description:
              description: Description
              type: str
              returned: always
              sample: A sample description created by Ansible.
            remote_group_name:
              description: Remote group name
              type: str
              returned: always
              sample: string-value
            remote_group_uuid:
              description: Remote group UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            id:
              description: ID
              type: int
              returned: always
              sample: 123
        description:
          description: Description
          type: str
          returned: always
          sample: A sample description created by Ansible.
        state:
          description: State
          type: str
          returned: always
          sample: OK
    server_group:
      description: Server group for instance scheduling policy
      type: str
      returned: always
      sample: null
    floating_ips:
      description: Floating IPs to assign to the instance
      type: list
      returned: always
      sample:
      - 8.8.8.8
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        address:
          description: The public IPv4 address of the floating IP
          type: str
          returned: always
          sample: null
        port_fixed_ips:
          description: A list of port fixed ips items.
          type: list
          returned: always
          sample: []
          contains:
            ip_address:
              description: IP address to assign to the port
              type: str
              returned: always
              sample: 192.168.42.50
            subnet_id:
              description: ID of the subnet in which to assign the IP address
              type: str
              returned: always
              sample: string-value
        port_mac_address:
          description: MAC address of the port
          type: str
          returned: always
          sample: 00:1B:44:11:3A:B7
        subnet:
          description: Subnet URL
          type: str
          returned: always
          sample: https://api.example.com/api/subnet/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        subnet_uuid:
          description: Subnet UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        subnet_name:
          description: Subnet name
          type: str
          returned: always
          sample: string-value
        subnet_description:
          description: Subnet description
          type: str
          returned: always
          sample: string-value
        subnet_cidr:
          description: IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
          type: str
          returned: always
          sample: 192.168.1.0/24
    ports:
      description: Network ports to attach to the instance
      type: list
      returned: always
      sample:
      - private-vlan-port
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        fixed_ips:
          description: A list of fixed ips items.
          type: list
          returned: always
          sample: []
          contains:
            ip_address:
              description: IP address to assign to the port
              type: str
              returned: always
              sample: 192.168.42.50
            subnet_id:
              description: ID of the subnet in which to assign the IP address
              type: str
              returned: always
              sample: string-value
        mac_address:
          description: MAC address of the port
          type: str
          returned: always
          sample: 00:1B:44:11:3A:B7
        subnet:
          description: Subnet to which this port belongs
          type: str
          returned: always
          sample: https://api.example.com/api/subnet/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        subnet_uuid:
          description: Subnet UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        subnet_name:
          description: Subnet name
          type: str
          returned: always
          sample: string-value
        subnet_description:
          description: Subnet description
          type: str
          returned: always
          sample: string-value
        subnet_cidr:
          description: IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
          type: str
          returned: always
          sample: 192.168.1.0/24
        allowed_address_pairs:
          description: A list of allowed address pairs items.
          type: list
          returned: always
          sample: []
          contains:
            mac_address:
              description: Mac address
              type: str
              returned: always
              sample: 00:1B:44:11:3A:B7
        device_id:
          description: ID of device (instance, router etc) to which this port is connected
          type: str
          returned: always
          sample: string-value
        device_owner:
          description: Entity that uses this port (e.g. network:router_interface)
          type: str
          returned: always
          sample: string-value
        security_groups:
          description: A list of security groups items.
          type: list
          returned: always
          sample:
          - web-server-sg
          contains:
            url:
              description: URL URL
              type: str
              returned: always
              sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            uuid:
              description: UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            name:
              description: Name
              type: str
              returned: always
              sample: My-Awesome-Resource
            description:
              description: Description
              type: str
              returned: always
              sample: A sample description created by Ansible.
            service_name:
              description: Service name
              type: str
              returned: always
              sample: string-value
            service_settings:
              description: Service settings URL
              type: str
              returned: always
              sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            service_settings_uuid:
              description: Service settings UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            service_settings_state:
              description: Service settings state
              type: str
              returned: always
              sample: string-value
            service_settings_error_message:
              description: Service settings error message
              type: str
              returned: always
              sample: string-value
            project:
              description: Project URL
              type: str
              returned: always
              sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            project_name:
              description: Project name
              type: str
              returned: always
              sample: Internal Research Project
            project_uuid:
              description: Project UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            customer:
              description: Customer URL
              type: str
              returned: always
              sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            customer_name:
              description: Customer name
              type: str
              returned: always
              sample: Big Corp Inc.
            customer_native_name:
              description: Customer native name
              type: str
              returned: always
              sample: string-value
            customer_abbreviation:
              description: Customer abbreviation
              type: str
              returned: always
              sample: string-value
            error_message:
              description: Error message
              type: str
              returned: always
              sample: string-value
            error_traceback:
              description: Error traceback
              type: str
              returned: always
              sample: string-value
            resource_type:
              description: Resource type
              type: str
              returned: always
              sample: string-value
            state:
              description: State
              type: str
              returned: always
              sample: OK
            created:
              description: Created
              type: str
              returned: always
              sample: '2023-10-01T12:00:00Z'
            modified:
              description: Modified
              type: str
              returned: always
              sample: '2023-10-01T12:00:00Z'
            backend_id:
              description: Backend ID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            access_url:
              description: Access URL
              type: str
              returned: always
              sample: string-value
            tenant:
              description: Tenant URL
              type: str
              returned: always
              sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            tenant_name:
              description: Tenant name
              type: str
              returned: always
              sample: string-value
            tenant_uuid:
              description: Tenant UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            rules:
              description: A list of rules items.
              type: list
              returned: always
              sample: []
              contains:
                ethertype:
                  description: IP protocol version - either 'IPv4' or 'IPv6'
                  type: str
                  returned: always
                  sample: null
                direction:
                  description: Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
                  type: str
                  returned: always
                  sample: null
                protocol:
                  description: The network protocol (TCP, UDP, ICMP, or empty for any protocol)
                  type: str
                  returned: always
                  sample: null
                from_port:
                  description: Starting port number in the range (1-65535)
                  type: int
                  returned: always
                  sample: 8080
                to_port:
                  description: Ending port number in the range (1-65535)
                  type: int
                  returned: always
                  sample: 8080
                cidr:
                  description: CIDR notation for the source/destination network address range
                  type: str
                  returned: always
                  sample: 192.168.1.0/24
                description:
                  description: Description
                  type: str
                  returned: always
                  sample: A sample description created by Ansible.
                remote_group_name:
                  description: Remote group name
                  type: str
                  returned: always
                  sample: string-value
                remote_group_uuid:
                  description: Remote group UUID
                  type: str
                  returned: always
                  sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
                id:
                  description: ID
                  type: int
                  returned: always
                  sample: 123
                remote_group:
                  description: Remote security group that this rule references, if any
                  type: str
                  returned: always
                  sample: https://api.example.com/api/remote-group/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            marketplace_offering_uuid:
              description: Marketplace offering UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_offering_name:
              description: Marketplace offering name
              type: str
              returned: always
              sample: string-value
            marketplace_offering_plugin_options:
              description: Marketplace offering plugin options
              type: dict
              returned: always
              sample: {}
            marketplace_category_uuid:
              description: Marketplace category UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_category_name:
              description: Marketplace category name
              type: str
              returned: always
              sample: string-value
            marketplace_resource_uuid:
              description: Marketplace resource UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_plan_uuid:
              description: Marketplace plan UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_resource_state:
              description: Marketplace resource state
              type: str
              returned: always
              sample: string-value
            is_usage_based:
              description: Is usage based
              type: bool
              returned: always
              sample: true
            is_limit_based:
              description: Is limit based
              type: bool
              returned: always
              sample: true
    availability_zone:
      description: Availability zone where this instance is located
      type: str
      returned: always
      sample: https://api.example.com/api/availability-zone/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    availability_zone_name:
      description: Name of the availability zone where instance is located
      type: str
      returned: always
      sample: string-value
    connect_directly_to_external_network:
      description: If True, instance will be connected directly to external network
      type: bool
      returned: always
      sample: true
    runtime_state:
      description: Runtime state
      type: str
      returned: always
      sample: string-value
    action:
      description: Action
      type: str
      returned: always
      sample: string-value
    action_details:
      description: Details about ongoing or completed actions
      type: str
      returned: always
      sample: null
    tenant_uuid:
      description: UUID of the OpenStack tenant
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    hypervisor_hostname:
      description: Name of the hypervisor hosting this instance
      type: str
      returned: always
      sample: server-01.example.com
    tenant:
      description: The OpenStack tenant to create the instance in
      type: str
      returned: always
      sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    external_address:
      description: A list of external address items.
      type: list
      returned: always
      sample: []
    rancher_cluster:
      description: Rancher cluster
      type: str
      returned: always
      sample: null
    marketplace_offering_uuid:
      description: Marketplace offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_offering_name:
      description: Marketplace offering name
      type: str
      returned: always
      sample: string-value
    marketplace_offering_plugin_options:
      description: Marketplace offering plugin options
      type: dict
      returned: always
      sample: {}
    marketplace_category_uuid:
      description: Marketplace category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_category_name:
      description: Marketplace category name
      type: str
      returned: always
      sample: string-value
    marketplace_resource_uuid:
      description: Marketplace resource UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_plan_uuid:
      description: Marketplace plan UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_resource_state:
      description: Marketplace resource state
      type: str
      returned: always
      sample: string-value
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true
commands:
  description: A list of HTTP requests that were made (or would be made in check mode) to execute the task.
  type: list
  returned: when changed
  elements: dict
  contains:
    method:
      description: The HTTP method used (e.g., POST, PATCH, DELETE).
      type: str
      sample: POST
    url:
      description: The fully qualified URL of the API endpoint.
      type: str
      sample: https://api.example.com/api/projects/
    description:
      description: A human-readable summary of the command's purpose.
      type: str
      sample: Create new project
    body:
      description: The JSON payload sent with the request. Only present for methods with a body.
      type: dict
      returned: if applicable
      sample:
        name: My-Awesome-Project

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "choices": ["present", "absent"], "default": "present"},
    "wait": {"type": "bool", "default": True},
    "timeout": {"type": "int", "default": 600},
    "interval": {"type": "int", "default": 20},
    "name": {"type": "str", "required": True},
    "project": {"type": "str", "required": True},
    "offering": {"type": "str", "required": True},
    "plan": {"type": "str"},
    "description": {"type": "str"},
    "flavor": {"type": "str", "required": True},
    "image": {"type": "str", "required": True},
    "ports": {"type": "list", "required": True},
    "floating_ips": {"type": "list"},
    "system_volume_size": {"type": "int", "required": True},
    "system_volume_type": {"type": "str"},
    "data_volume_size": {"type": "int"},
    "data_volume_type": {"type": "str"},
    "ssh_public_key": {"type": "str"},
    "user_data": {"type": "str"},
    "availability_zone": {"type": "str"},
    "connect_directly_to_external_network": {"type": "bool"},
    "data_volumes": {"type": "list"},
    "security_groups": {"type": "list"},
    "termination_action": {"type": "str", "choices": ["destroy", "force_destroy"]},
    "delete_volumes": {"type": "str"},
    "release_floating_ips": {"type": "str"},
}

RUNNER_CONTEXT = {
    "resource_type": "instance",
    "check_url": "/api/openstack-instances/",
    "check_filter_keys": {"project": "project_uuid"},
    "update_url": None,
    "update_fields": ["description", "name"],
    "attribute_param_names": [
        "system_volume_type",
        "security_groups",
        "availability_zone",
        "flavor",
        "data_volume_type",
        "image",
        "ssh_public_key",
        "connect_directly_to_external_network",
        "data_volume_size",
        "data_volumes",
        "description",
        "floating_ips",
        "name",
        "ports",
        "system_volume_size",
        "user_data",
    ],
    "termination_attributes_map": {
        "termination_action": "action",
        "delete_volumes": "delete_volumes",
        "release_floating_ips": "release_floating_ips",
    },
    "resolvers": {
        "project": {
            "url": "/api/projects/",
            "error_message": None,
            "filter_by": [],
            "is_list": None,
            "list_item_keys": {},
        },
        "flavor": {
            "url": "/api/openstack-flavors/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": False,
            "list_item_keys": {},
        },
        "image": {
            "url": "/api/openstack-images/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": False,
            "list_item_keys": {},
        },
        "system_volume_type": {
            "url": "/api/openstack-volume-types/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": False,
            "list_item_keys": {},
        },
        "data_volume_type": {
            "url": "/api/openstack-volume-types/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": False,
            "list_item_keys": {},
        },
        "security_groups": {
            "url": "/api/openstack-security-groups/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": True,
            "list_item_keys": {"create": "url", "update_action": None},
        },
        "availability_zone": {
            "url": "/api/openstack-instance-availability-zones/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": False,
            "list_item_keys": {},
        },
        "subnet": {
            "url": "/api/openstack-subnets/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "offering",
                    "source_key": "scope_uuid",
                    "target_key": "tenant_uuid",
                }
            ],
            "is_list": None,
            "list_item_keys": {},
        },
        "ssh_public_key": {
            "url": "/api/keys/",
            "error_message": None,
            "filter_by": [],
            "is_list": False,
            "list_item_keys": {},
        },
        "offering": {
            "url": "/api/marketplace-public-offerings/",
            "error_message": None,
            "filter_by": [],
            "is_list": None,
            "list_item_keys": {},
        },
    },
    "resolver_order": [
        "project",
        "flavor",
        "image",
        "system_volume_type",
        "data_volume_type",
        "security_groups",
        "availability_zone",
        "subnet",
        "ssh_public_key",
        "offering",
    ],
    "update_actions": {
        "update_ports": {
            "path": "/api/openstack-instances/{uuid}/update_ports/",
            "param": "ports",
            "compare_key": "ports",
            "wrap_in_object": True,
            "idempotency_keys": ["fixed_ips", "port", "subnet"],
            "defaults_map": {},
        },
        "update_security_groups": {
            "path": "/api/openstack-instances/{uuid}/update_security_groups/",
            "param": "security_groups",
            "compare_key": "security_groups",
            "wrap_in_object": True,
            "idempotency_keys": [],
            "defaults_map": {},
        },
        "update_floating_ips": {
            "path": "/api/openstack-instances/{uuid}/update_floating_ips/",
            "param": "floating_ips",
            "compare_key": "floating_ips",
            "wrap_in_object": True,
            "idempotency_keys": ["subnet"],
            "defaults_map": {},
        },
    },
    "resource_detail_path": "/api/openstack-instances/{uuid}/",
    "transformations": {
        "data_volume_size": "gb_to_mb",
        "system_volume_size": "gb_to_mb",
    },
    "wait_config": {
        "ok_states": ["OK"],
        "erred_states": ["ERRED"],
        "state_field": "state",
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = OrderRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
