#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.openstack.plugins.module_utils.waldur.link_runner import (
    LinkRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: volume_attachment
short_description: Attach and detach OpenStack volumes from instances.
description: ''
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the link be present (e.g., attached) or absent (e.g., detached).
    choices:
    - present
    - absent
    default: present
    type: str
  volume:
    description: The name or UUID of the volume.
    type: str
    required: true
  instance:
    description: The name or UUID of the instance.
    type: str
    required: true
  device:
    description: Device path on the instance (e.g., /dev/vdb). Defaults to auto-discovery by the backend.
    type: string
    required: false
  tenant:
    description: The name or UUID of the parent tenant for filtering.
    type: str
    required: true
  customer:
    description: The name or UUID of the parent customer for filtering.
    type: str
    required: true
  project:
    description: The name or UUID of the parent project for filtering.
    type: str
    required: true
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Attach a volume to a instance
  hosts: localhost
  tasks:
  - name: Link resources
    waldur.openstack.volume_attachment:
      state: present
      volume: My-volume
      instance: My-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: My-Parent-Tenant
      customer: My-Parent-Customer
      project: My-Parent-Project
      device: string-value
- name: Detach a volume from a instance
  hosts: localhost
  tasks:
  - name: Unlink resources
    waldur.openstack.volume_attachment:
      state: absent
      volume: My-volume
      instance: My-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: My-Parent-Tenant
      customer: My-Parent-Customer
      project: My-Parent-Project

"""

RETURN = """
resource:
  description: The state of the volume after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-volume
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    service_name:
      description: Service name
      type: str
      returned: always
      sample: string-value
    service_settings:
      description: Service settings URL
      type: str
      returned: always
      sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_settings_uuid:
      description: Service settings UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    service_settings_state:
      description: Service settings state
      type: str
      returned: always
      sample: string-value
    service_settings_error_message:
      description: Service settings error message
      type: str
      returned: always
      sample: string-value
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer:
      description: Customer URL
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    state:
      description: State
      type: str
      returned: always
      sample: OK
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    backend_id:
      description: Volume ID in the OpenStack backend
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    access_url:
      description: Access URL
      type: str
      returned: always
      sample: string-value
    source_snapshot:
      description: Snapshot that this volume was created from, if any
      type: str
      returned: always
      sample: https://api.example.com/api/source-snapshot/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    size:
      description: Size in MiB
      type: int
      returned: always
      sample: 100
    bootable:
      description: Indicates if this volume can be used to boot an instance
      type: bool
      returned: always
      sample: true
    metadata:
      description: Metadata
      type: str
      returned: always
      sample: null
    image:
      description: Image that this volume was created from, if any
      type: str
      returned: always
      sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    image_metadata:
      description: Metadata of the image this volume was created from
      type: str
      returned: always
      sample: string-value
    image_name:
      description: Name of the image this volume was created from
      type: str
      returned: always
      sample: string-value
    type:
      description: Type of the volume (e.g. SSD, HDD)
      type: str
      returned: always
      sample: https://api.example.com/api/type/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    type_name:
      description: Type name
      type: str
      returned: always
      sample: string-value
    runtime_state:
      description: Runtime state
      type: str
      returned: always
      sample: string-value
    availability_zone:
      description: Availability zone where this volume is located
      type: str
      returned: always
      sample: https://api.example.com/api/availability-zone/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    availability_zone_name:
      description: Availability zone name
      type: str
      returned: always
      sample: string-value
    device:
      description: Name of volume as instance device e.g. /dev/vdb.
      type: str
      returned: always
      sample: string-value
    action:
      description: Action
      type: str
      returned: always
      sample: string-value
    action_details:
      description: Action details
      type: str
      returned: always
      sample: null
    instance:
      description: Instance that this volume is attached to, if any
      type: str
      returned: always
      sample: https://api.example.com/api/instance/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    instance_name:
      description: Instance name
      type: str
      returned: always
      sample: string-value
    instance_marketplace_uuid:
      description: Instance marketplace UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    tenant:
      description: Tenant URL
      type: str
      returned: always
      sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    tenant_uuid:
      description: Tenant UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    extend_enabled:
      description: Extend enabled
      type: bool
      returned: always
      sample: true
    marketplace_offering_uuid:
      description: Marketplace offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_offering_name:
      description: Marketplace offering name
      type: str
      returned: always
      sample: string-value
    marketplace_offering_plugin_options:
      description: Marketplace offering plugin options
      type: dict
      returned: always
      sample: {}
    marketplace_category_uuid:
      description: Marketplace category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_category_name:
      description: Marketplace category name
      type: str
      returned: always
      sample: string-value
    marketplace_resource_uuid:
      description: Marketplace resource UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_plan_uuid:
      description: Marketplace plan UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_resource_state:
      description: Marketplace resource state
      type: str
      returned: always
      sample: string-value
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true
commands:
  description: A list of HTTP requests that were made (or would be made in check mode) to execute the task.
  type: list
  returned: when changed
  elements: dict
  contains:
    method:
      description: The HTTP method used (e.g., POST, PATCH, DELETE).
      type: str
      sample: POST
    url:
      description: The fully qualified URL of the API endpoint.
      type: str
      sample: https://api.example.com/api/projects/
    description:
      description: A human-readable summary of the command's purpose.
      type: str
      sample: Create new project
    body:
      description: The JSON payload sent with the request. Only present for methods with a body.
      type: dict
      returned: if applicable
      sample:
        name: My-Awesome-Project

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "choices": ["present", "absent"], "default": "present"},
    "volume": {"type": "str", "required": True},
    "instance": {"type": "str", "required": True},
    "device": {"type": "string"},
    "tenant": {"type": "str", "required": True},
    "customer": {"type": "str", "required": True},
    "project": {"type": "str", "required": True},
}

RUNNER_CONTEXT = {
    "resource_type": "OpenStack volume attachment",
    "source": {"param": "volume", "resource_type": "volume"},
    "target": {"param": "instance", "resource_type": "instance"},
    "link_op_path": "/api/openstack-volumes/{uuid}/attach/",
    "unlink_op_path": "/api/openstack-volumes/{uuid}/detach/",
    "link_check_key": "instance",
    "link_param_names": ["device"],
    "resolvers": {
        "tenant": {
            "url": "/api/openstack-tenants/",
            "error_message": None,
            "filter_by": [],
        },
        "customer": {"url": "/api/customers/", "error_message": None, "filter_by": []},
        "project": {"url": "/api/projects/", "error_message": None, "filter_by": []},
        "instance": {
            "url": "/api/openstack-instances/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "tenant",
                    "source_key": "uuid",
                    "target_key": "tenant_uuid",
                }
            ],
        },
        "volume": {
            "url": "/api/openstack-volumes/",
            "error_message": None,
            "filter_by": [
                {
                    "source_param": "tenant",
                    "source_key": "uuid",
                    "target_key": "tenant_uuid",
                }
            ],
        },
    },
    "resolver_order": ["instance", "volume", "customer", "project", "tenant"],
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = LinkRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
