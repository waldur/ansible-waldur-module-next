#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.openstack.plugins.module_utils.waldur.crud_runner import (
    CrudRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: security_group
short_description: Manage OpenStack Security Groups and their rules in Waldur.
description:
- Manage OpenStack Security Groups and their rules in Waldur.
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  name:
    name: name
    type: str
    required: true
    description: The name of the security_group to check/create/delete.
    maps_to: name_exact
  tenant:
    name: tenant
    type: str
    required: true
    description: The parent tenant name or UUID for creating the resource.
  description:
    name: description
    type: str
    required: false
    description: Description
    is_resolved: false
    choices: null
  rules:
    name: rules
    type: list
    required: true
    description: Rules
    is_resolved: false
    choices: null
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Create a new OpenStack security group
  hosts: localhost
  tasks:
  - name: Add OpenStack security group
    waldur.openstack.security_group:
      state: present
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com/api
      tenant: Tenant Name or UUID
      name: My-Awesome-OpenStack-security-group
      description: A sample description created by Ansible.
      rules:
      - ethertype: IPv4
        direction: ingress
        protocol: null
        from_port: 8080
        to_port: 8080
        cidr: 192.168.1.0/24
        description: A sample description created by Ansible.
        remote_group: https://api.example.com/api/remote-group/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
- name: Remove an existing OpenStack security group
  hosts: localhost
  tasks:
  - name: Remove OpenStack security group
    waldur.openstack.security_group:
      state: absent
      name: My-Awesome-OpenStack-security-group
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com/api
      tenant: Tenant name or UUID

"""

RETURN = """
resource:
  description: The state of the OpenStack security group after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-Resource
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    service_name:
      description: Service name
      type: str
      returned: always
      sample: string-value
    service_settings:
      description: Service settings URL
      type: str
      returned: always
      sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_settings_uuid:
      description: Service settings UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    service_settings_state:
      description: Service settings state
      type: str
      returned: always
      sample: string-value
    service_settings_error_message:
      description: Service settings error message
      type: str
      returned: always
      sample: string-value
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer:
      description: Customer URL
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    state:
      description: State
      type: str
      returned: always
      sample: OK
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    backend_id:
      description: Backend ID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    access_url:
      description: Access URL
      type: str
      returned: always
      sample: string-value
    tenant:
      description: Tenant URL
      type: str
      returned: always
      sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    tenant_name:
      description: Tenant name
      type: str
      returned: always
      sample: string-value
    tenant_uuid:
      description: Tenant UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    rules:
      description: A list of rules items.
      type: list
      returned: always
      sample: []
      contains:
        ethertype:
          description: Ethertype
          type: str
          returned: always
          sample: IPv4
        direction:
          description: Direction
          type: str
          returned: always
          sample: ingress
        protocol:
          description: Protocol
          type: str
          returned: always
          sample: null
        from_port:
          description: From port
          type: int
          returned: always
          sample: 8080
        to_port:
          description: To port
          type: int
          returned: always
          sample: 8080
        cidr:
          description: CIDR
          type: str
          returned: always
          sample: 192.168.1.0/24
        description:
          description: Description
          type: str
          returned: always
          sample: A sample description created by Ansible.
        remote_group_name:
          description: Remote group name
          type: str
          returned: always
          sample: string-value
        remote_group_uuid:
          description: Remote group UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        id:
          description: ID
          type: int
          returned: always
          sample: 123
        remote_group:
          description: Remote group URL
          type: str
          returned: always
          sample: https://api.example.com/api/remote-group/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    marketplace_offering_uuid:
      description: Marketplace offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_offering_name:
      description: Marketplace offering name
      type: str
      returned: always
      sample: string-value
    marketplace_offering_plugin_options:
      description: Marketplace offering plugin options
      type: dict
      returned: always
      sample: {}
    marketplace_category_uuid:
      description: Marketplace category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_category_name:
      description: Marketplace category name
      type: str
      returned: always
      sample: string-value
    marketplace_resource_uuid:
      description: Marketplace resource UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_plan_uuid:
      description: Marketplace plan UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_resource_state:
      description: Marketplace resource state
      type: str
      returned: always
      sample: string-value
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "required": False, "choices": ["present", "absent"]},
    "name": {"type": "str", "required": True},
    "tenant": {"type": "str", "required": True},
    "description": {"type": "str", "required": False},
    "rules": {"type": "list", "required": True},
}

RUNNER_CONTEXT = {
    "resource_type": "OpenStack security group",
    "list_path": "/api/openstack-security-groups/",
    "create_path": "/api/openstack-tenants/{uuid}/create_security_group/",
    "destroy_path": "/api/openstack-security-groups/{uuid}/",
    "update_path": "/api/openstack-security-groups/{uuid}/",
    "model_param_names": ["name", "description", "rules"],
    "path_param_maps": {"create": {"uuid": "tenant"}},
    "update_fields": ["name", "description"],
    "update_actions": {
        "set_rules": {
            "path": "/api/openstack-security-groups/{uuid}/set_rules/",
            "param": "rules",
        }
    },
    "resolvers": {
        "tenant": {
            "url": "/api/openstack-tenants/",
            "error_message": "Tenant '{value}' not found.",
        }
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = CrudRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
