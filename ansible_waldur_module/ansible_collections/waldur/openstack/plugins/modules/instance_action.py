#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.openstack.plugins.module_utils.waldur.actions_runner import (
    ActionsRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: instance_action
short_description: Perform actions on OpenStack instance.
description: ''
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  name:
    description: The name or UUID of the OpenStack instance to perform an action on.
    type: str
    required: true
  action:
    description: The action to perform on the resource.
    type: str
    required: true
    choices:
    - start
    - stop
    - restart
    - pull
    - unlink
  tenant:
    description: The name or UUID of the parent tenant for filtering.
    type: str
    required: true
  customer:
    description: The name or UUID of the parent customer for filtering.
    type: str
    required: true
  project:
    description: The name or UUID of the parent project for filtering.
    type: str
    required: true
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Perform 'start' action on a OpenStack instance
  hosts: localhost
  tasks:
  - name: Trigger start
    waldur.openstack.instance_action:
      name: My-Target-OpenStack-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: Parent Tenant Name or UUID
      customer: Parent Customer Name or UUID
      project: Parent Project Name or UUID
      action: start
- name: Perform 'stop' action on a OpenStack instance
  hosts: localhost
  tasks:
  - name: Trigger stop
    waldur.openstack.instance_action:
      name: My-Target-OpenStack-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: Parent Tenant Name or UUID
      customer: Parent Customer Name or UUID
      project: Parent Project Name or UUID
      action: stop
- name: Perform 'restart' action on a OpenStack instance
  hosts: localhost
  tasks:
  - name: Trigger restart
    waldur.openstack.instance_action:
      name: My-Target-OpenStack-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: Parent Tenant Name or UUID
      customer: Parent Customer Name or UUID
      project: Parent Project Name or UUID
      action: restart
- name: Perform 'pull' action on a OpenStack instance
  hosts: localhost
  tasks:
  - name: Trigger pull
    waldur.openstack.instance_action:
      name: My-Target-OpenStack-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: Parent Tenant Name or UUID
      customer: Parent Customer Name or UUID
      project: Parent Project Name or UUID
      action: pull
- name: Perform 'unlink' action on a OpenStack instance
  hosts: localhost
  tasks:
  - name: Trigger unlink
    waldur.openstack.instance_action:
      name: My-Target-OpenStack-instance
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      tenant: Parent Tenant Name or UUID
      customer: Parent Customer Name or UUID
      project: Parent Project Name or UUID
      action: unlink

"""

RETURN = """
resource:
  description: A dictionary describing the OpenStack instance after the action was performed.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-OpenStack-instance
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    service_name:
      description: Service name
      type: str
      returned: always
      sample: string-value
    service_settings:
      description: OpenStack provider settings
      type: str
      returned: always
      sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_settings_uuid:
      description: Service settings UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    service_settings_state:
      description: Service settings state
      type: str
      returned: always
      sample: string-value
    service_settings_error_message:
      description: Service settings error message
      type: str
      returned: always
      sample: string-value
    project:
      description: Project URL
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_uuid:
      description: Project UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer:
      description: Customer URL
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    state:
      description: State
      type: str
      returned: always
      sample: OK
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    backend_id:
      description: Instance ID in the OpenStack backend
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    access_url:
      description: Access URL
      type: str
      returned: always
      sample: string-value
    start_time:
      description: Start time
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    cores:
      description: Number of cores in a VM
      type: int
      returned: always
      sample: 2
    ram:
      description: Memory size in MiB
      type: int
      returned: always
      sample: 2048
    disk:
      description: Disk size in MiB
      type: int
      returned: always
      sample: 20480
    min_ram:
      description: Minimum memory size in MiB
      type: int
      returned: always
      sample: 2048
    min_disk:
      description: Minimum disk size in MiB
      type: int
      returned: always
      sample: 20480
    user_data:
      description: Additional data that will be added to instance on provisioning
      type: str
      returned: always
      sample: "#cloud-config\npackages:\n  - nginx"
    external_ips:
      description: A list of external ips items.
      type: list
      returned: always
      sample: []
    internal_ips:
      description: A list of internal ips items.
      type: list
      returned: always
      sample: []
    latitude:
      description: Latitude
      type: float
      returned: always
      sample: 123.45
    longitude:
      description: Longitude
      type: float
      returned: always
      sample: 123.45
    key_name:
      description: Key name
      type: str
      returned: always
      sample: string-value
    key_fingerprint:
      description: Key fingerprint
      type: str
      returned: always
      sample: string-value
    image_name:
      description: Image name
      type: str
      returned: always
      sample: string-value
    flavor_disk:
      description: Flavor disk size in MiB
      type: int
      returned: always
      sample: 20480
    flavor_name:
      description: Name of the flavor used by this instance
      type: str
      returned: always
      sample: string-value
    volumes:
      description: List of volumes attached to the instance
      type: list
      returned: always
      sample: []
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-OpenStack-instance
        image_name:
          description: Name of the image this volume was created from
          type: str
          returned: always
          sample: string-value
        state:
          description: State
          type: str
          returned: always
          sample: OK
        bootable:
          description: Indicates if this volume can be used to boot an instance
          type: bool
          returned: always
          sample: true
        size:
          description: Size in MiB
          type: int
          returned: always
          sample: 100
        device:
          description: Name of volume as instance device e.g. /dev/vdb.
          type: str
          returned: always
          sample: string-value
        resource_type:
          description: Resource type
          type: str
          returned: always
          sample: string-value
        type:
          description: Type of the volume (e.g. SSD, HDD)
          type: str
          returned: always
          sample: https://api.example.com/api/type/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        type_name:
          description: Type name
          type: str
          returned: always
          sample: string-value
        marketplace_resource_uuid:
          description: Marketplace resource UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    security_groups:
      description: List of security groups to apply to the instance
      type: list
      returned: always
      sample:
      - web-server-sg
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-OpenStack-instance
        rules:
          description: A list of rules items.
          type: list
          returned: always
          sample: []
          contains:
            ethertype:
              description: IP protocol version - either 'IPv4' or 'IPv6'
              type: str
              returned: always
              sample: null
            direction:
              description: Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
              type: str
              returned: always
              sample: null
            protocol:
              description: The network protocol (TCP, UDP, ICMP, or empty for any protocol)
              type: str
              returned: always
              sample: null
            from_port:
              description: Starting port number in the range (1-65535)
              type: int
              returned: always
              sample: 8080
            to_port:
              description: Ending port number in the range (1-65535)
              type: int
              returned: always
              sample: 8080
            cidr:
              description: CIDR notation for the source/destination network address range
              type: str
              returned: always
              sample: 192.168.1.0/24
            description:
              description: Description
              type: str
              returned: always
              sample: A sample description created by Ansible.
            remote_group_name:
              description: Remote group name
              type: str
              returned: always
              sample: string-value
            remote_group_uuid:
              description: Remote group UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            id:
              description: ID
              type: int
              returned: always
              sample: 123
        description:
          description: Description
          type: str
          returned: always
          sample: A sample description created by Ansible.
        state:
          description: State
          type: str
          returned: always
          sample: OK
    server_group:
      description: Server group for instance scheduling policy
      type: str
      returned: always
      sample: null
    floating_ips:
      description: Floating IPs to assign to the instance
      type: list
      returned: always
      sample:
      - 8.8.8.8
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        address:
          description: The public IPv4 address of the floating IP
          type: str
          returned: always
          sample: null
        port_fixed_ips:
          description: A list of port fixed ips items.
          type: list
          returned: always
          sample: []
          contains:
            ip_address:
              description: IP address to assign to the port
              type: str
              returned: always
              sample: 8.8.8.8
            subnet_id:
              description: ID of the subnet in which to assign the IP address
              type: str
              returned: always
              sample: string-value
        port_mac_address:
          description: MAC address of the port
          type: str
          returned: always
          sample: 00:1B:44:11:3A:B7
        subnet:
          description: Subnet URL
          type: str
          returned: always
          sample: https://api.example.com/api/subnet/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        subnet_uuid:
          description: Subnet UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        subnet_name:
          description: Subnet name
          type: str
          returned: always
          sample: string-value
        subnet_description:
          description: Subnet description
          type: str
          returned: always
          sample: string-value
        subnet_cidr:
          description: IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
          type: str
          returned: always
          sample: 192.168.1.0/24
    ports:
      description: Network ports to attach to the instance
      type: list
      returned: always
      sample:
      - private-vlan-port
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        fixed_ips:
          description: A list of fixed ips items.
          type: list
          returned: always
          sample: []
          contains:
            ip_address:
              description: IP address to assign to the port
              type: str
              returned: always
              sample: 8.8.8.8
            subnet_id:
              description: ID of the subnet in which to assign the IP address
              type: str
              returned: always
              sample: string-value
        mac_address:
          description: MAC address of the port
          type: str
          returned: always
          sample: 00:1B:44:11:3A:B7
        subnet:
          description: Subnet to which this port belongs
          type: str
          returned: always
          sample: https://api.example.com/api/subnet/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        subnet_uuid:
          description: Subnet UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        subnet_name:
          description: Subnet name
          type: str
          returned: always
          sample: string-value
        subnet_description:
          description: Subnet description
          type: str
          returned: always
          sample: string-value
        subnet_cidr:
          description: IPv4 network address in CIDR format (e.g. 192.168.0.0/24)
          type: str
          returned: always
          sample: 192.168.1.0/24
        allowed_address_pairs:
          description: A list of allowed address pairs items.
          type: list
          returned: always
          sample: []
          contains:
            mac_address:
              description: Mac address
              type: str
              returned: always
              sample: 00:1B:44:11:3A:B7
        device_id:
          description: ID of device (instance, router etc) to which this port is connected
          type: str
          returned: always
          sample: string-value
        device_owner:
          description: Entity that uses this port (e.g. network:router_interface)
          type: str
          returned: always
          sample: string-value
        security_groups:
          description: A list of security groups items.
          type: list
          returned: always
          sample:
          - web-server-sg
          contains:
            url:
              description: URL URL
              type: str
              returned: always
              sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            uuid:
              description: UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            name:
              description: Name
              type: str
              returned: always
              sample: My-Awesome-OpenStack-instance
            description:
              description: Description
              type: str
              returned: always
              sample: A sample description created by Ansible.
            service_name:
              description: Service name
              type: str
              returned: always
              sample: string-value
            service_settings:
              description: Service settings URL
              type: str
              returned: always
              sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            service_settings_uuid:
              description: Service settings UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            service_settings_state:
              description: Service settings state
              type: str
              returned: always
              sample: string-value
            service_settings_error_message:
              description: Service settings error message
              type: str
              returned: always
              sample: string-value
            project:
              description: Project URL
              type: str
              returned: always
              sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            project_name:
              description: Project name
              type: str
              returned: always
              sample: Internal Research Project
            project_uuid:
              description: Project UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            customer:
              description: Customer URL
              type: str
              returned: always
              sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            customer_name:
              description: Customer name
              type: str
              returned: always
              sample: Big Corp Inc.
            customer_native_name:
              description: Customer native name
              type: str
              returned: always
              sample: string-value
            customer_abbreviation:
              description: Customer abbreviation
              type: str
              returned: always
              sample: string-value
            error_message:
              description: Error message
              type: str
              returned: always
              sample: string-value
            error_traceback:
              description: Error traceback
              type: str
              returned: always
              sample: string-value
            resource_type:
              description: Resource type
              type: str
              returned: always
              sample: string-value
            state:
              description: State
              type: str
              returned: always
              sample: OK
            created:
              description: Created
              type: str
              returned: always
              sample: '2023-10-01T12:00:00Z'
            modified:
              description: Modified
              type: str
              returned: always
              sample: '2023-10-01T12:00:00Z'
            backend_id:
              description: Backend ID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            access_url:
              description: Access URL
              type: str
              returned: always
              sample: string-value
            tenant:
              description: Tenant URL
              type: str
              returned: always
              sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            tenant_name:
              description: Tenant name
              type: str
              returned: always
              sample: string-value
            tenant_uuid:
              description: Tenant UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            rules:
              description: A list of rules items.
              type: list
              returned: always
              sample: []
              contains:
                ethertype:
                  description: IP protocol version - either 'IPv4' or 'IPv6'
                  type: str
                  returned: always
                  sample: null
                direction:
                  description: Traffic direction - either 'ingress' (incoming) or 'egress' (outgoing)
                  type: str
                  returned: always
                  sample: null
                protocol:
                  description: The network protocol (TCP, UDP, ICMP, or empty for any protocol)
                  type: str
                  returned: always
                  sample: null
                from_port:
                  description: Starting port number in the range (1-65535)
                  type: int
                  returned: always
                  sample: 8080
                to_port:
                  description: Ending port number in the range (1-65535)
                  type: int
                  returned: always
                  sample: 8080
                cidr:
                  description: CIDR notation for the source/destination network address range
                  type: str
                  returned: always
                  sample: 192.168.1.0/24
                description:
                  description: Description
                  type: str
                  returned: always
                  sample: A sample description created by Ansible.
                remote_group_name:
                  description: Remote group name
                  type: str
                  returned: always
                  sample: string-value
                remote_group_uuid:
                  description: Remote group UUID
                  type: str
                  returned: always
                  sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
                id:
                  description: ID
                  type: int
                  returned: always
                  sample: 123
                remote_group:
                  description: Remote security group that this rule references, if any
                  type: str
                  returned: always
                  sample: https://api.example.com/api/remote-group/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
            marketplace_offering_uuid:
              description: Marketplace offering UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_offering_name:
              description: Marketplace offering name
              type: str
              returned: always
              sample: string-value
            marketplace_offering_plugin_options:
              description: Marketplace offering plugin options
              type: dict
              returned: always
              sample: {}
            marketplace_category_uuid:
              description: Marketplace category UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_category_name:
              description: Marketplace category name
              type: str
              returned: always
              sample: string-value
            marketplace_resource_uuid:
              description: Marketplace resource UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_plan_uuid:
              description: Marketplace plan UUID
              type: str
              returned: always
              sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            marketplace_resource_state:
              description: Marketplace resource state
              type: str
              returned: always
              sample: string-value
            is_usage_based:
              description: Is usage based
              type: bool
              returned: always
              sample: true
            is_limit_based:
              description: Is limit based
              type: bool
              returned: always
              sample: true
    availability_zone:
      description: Availability zone where this instance is located
      type: str
      returned: always
      sample: https://api.example.com/api/availability-zone/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    availability_zone_name:
      description: Name of the availability zone where instance is located
      type: str
      returned: always
      sample: string-value
    connect_directly_to_external_network:
      description: If True, instance will be connected directly to external network
      type: bool
      returned: always
      sample: true
    runtime_state:
      description: Runtime state
      type: str
      returned: always
      sample: string-value
    action:
      description: Action
      type: str
      returned: always
      sample: string-value
    action_details:
      description: Details about ongoing or completed actions
      type: str
      returned: always
      sample: null
    tenant_uuid:
      description: UUID of the OpenStack tenant
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    hypervisor_hostname:
      description: Name of the hypervisor hosting this instance
      type: str
      returned: always
      sample: server-01.example.com
    tenant:
      description: The OpenStack tenant to create the instance in
      type: str
      returned: always
      sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    external_address:
      description: A list of external address items.
      type: list
      returned: always
      sample: []
    rancher_cluster:
      description: Rancher cluster
      type: str
      returned: always
      sample: null
    marketplace_offering_uuid:
      description: Marketplace offering UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_offering_name:
      description: Marketplace offering name
      type: str
      returned: always
      sample: string-value
    marketplace_offering_plugin_options:
      description: Marketplace offering plugin options
      type: dict
      returned: always
      sample: {}
    marketplace_category_uuid:
      description: Marketplace category UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_category_name:
      description: Marketplace category name
      type: str
      returned: always
      sample: string-value
    marketplace_resource_uuid:
      description: Marketplace resource UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_plan_uuid:
      description: Marketplace plan UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_resource_state:
      description: Marketplace resource state
      type: str
      returned: always
      sample: string-value
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true
commands:
  description: A list of HTTP requests that were made (or would be made in check mode) to execute the task.
  type: list
  returned: when changed
  elements: dict
  contains:
    method:
      description: The HTTP method used (e.g., POST, PATCH, DELETE).
      type: str
      sample: POST
    url:
      description: The fully qualified URL of the API endpoint.
      type: str
      sample: https://api.example.com/api/projects/
    description:
      description: A human-readable summary of the command's purpose.
      type: str
      sample: Create new project
    body:
      description: The JSON payload sent with the request. Only present for methods with a body.
      type: dict
      returned: if applicable
      sample:
        name: My-Awesome-Project

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "name": {"type": "str", "required": True},
    "action": {
        "type": "str",
        "choices": ["start", "stop", "restart", "pull", "unlink"],
        "required": True,
    },
    "tenant": {"type": "str", "required": True},
    "customer": {"type": "str", "required": True},
    "project": {"type": "str", "required": True},
}

RUNNER_CONTEXT = {
    "resource_type": "OpenStack instance",
    "check_url": "/api/openstack-instances/",
    "check_filter_keys": {
        "tenant": "tenant_uuid",
        "customer": "customer_uuid",
        "project": "project_uuid",
    },
    "retrieve_url": "/api/openstack-instances/{uuid}/",
    "identifier_param": "name",
    "resolvers": {
        "tenant": {
            "url": "/api/openstack-tenants/",
            "error_message": "Tenant '{value}' not found.",
        },
        "customer": {
            "url": "/api/customers/",
            "error_message": "Customer '{value}' not found.",
        },
        "project": {
            "url": "/api/projects/",
            "error_message": "Project '{value}' not found.",
        },
    },
    "actions": {
        "start": "/api/openstack-instances/{uuid}/start/",
        "stop": "/api/openstack-instances/{uuid}/stop/",
        "restart": "/api/openstack-instances/{uuid}/restart/",
        "pull": "/api/openstack-instances/{uuid}/pull/",
        "unlink": "/api/openstack-instances/{uuid}/unlink/",
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = ActionsRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
