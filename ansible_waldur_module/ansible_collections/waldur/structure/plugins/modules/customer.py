#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.structure.plugins.module_utils.waldur.crud_runner import (
    CrudRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: customer
short_description: Manage customer resources.
description:
- Manage customer resources.
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  name:
    name: name
    type: str
    required: true
    description: The name of the customer to check/create/delete.
    maps_to: name_exact
  backend_id:
    name: backend_id
    type: str
    required: false
    description: Organization identifier in another application.
    is_resolved: false
    choices: null
  image:
    name: image
    type: str
    required: false
    description: Image
    is_resolved: false
    choices: null
  native_name:
    name: native_name
    type: str
    required: false
    description: Native name
    is_resolved: false
    choices: null
  abbreviation:
    name: abbreviation
    type: str
    required: false
    description: Abbreviation
    is_resolved: false
    choices: null
  contact_details:
    name: contact_details
    type: str
    required: false
    description: Contact details
    is_resolved: false
    choices: null
  email:
    name: email
    type: str
    required: false
    description: Email
    is_resolved: false
    choices: null
  phone_number:
    name: phone_number
    type: str
    required: false
    description: Phone number
    is_resolved: false
    choices: null
  registration_code:
    name: registration_code
    type: str
    required: false
    description: Registration code
    is_resolved: false
    choices: null
  homepage:
    name: homepage
    type: str
    required: false
    description: Homepage
    is_resolved: false
    choices: null
  vat_code:
    name: vat_code
    type: str
    required: false
    description: VAT number
    is_resolved: false
    choices: null
  postal:
    name: postal
    type: str
    required: false
    description: Postal
    is_resolved: false
    choices: null
  address:
    name: address
    type: str
    required: false
    description: Address
    is_resolved: false
    choices: null
  bank_name:
    name: bank_name
    type: str
    required: false
    description: Bank name
    is_resolved: false
    choices: null
  latitude:
    name: latitude
    type: float
    required: false
    description: Latitude
    is_resolved: false
    choices: null
  longitude:
    name: longitude
    type: float
    required: false
    description: Longitude
    is_resolved: false
    choices: null
  bank_account:
    name: bank_account
    type: str
    required: false
    description: Bank account
    is_resolved: false
    choices: null
  country:
    name: country
    type: str
    required: false
    description: Country
    is_resolved: false
    choices:
    - AL
    - AT
    - BE
    - BG
    - BA
    - CH
    - CY
    - CZ
    - DE
    - DK
    - ES
    - EE
    - FI
    - FR
    - GB
    - GE
    - GR
    - HR
    - HU
    - IE
    - IS
    - IT
    - LT
    - LU
    - LV
    - MC
    - MK
    - MT
    - NL
    - 'NO'
    - PL
    - PT
    - RO
    - RS
    - SK
    - SI
    - SE
    - UA
    - EU
    - ''
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Create a new customer
  hosts: localhost
  tasks:
  - name: Add customer
    waldur.structure.customer:
      state: present
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      backend_id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      image: string-value
      name: My-Awesome-customer
      native_name: string-value
      abbreviation: string-value
      contact_details: string-value
      email: alice@example.com
      phone_number: +1-202-555-0104
      registration_code: string-value
      homepage: https://api.example.com/api/homepage/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      vat_code: string-value
      postal: string-value
      address: string-value
      bank_name: string-value
      latitude: 123.45
      longitude: 123.45
      bank_account: string-value
      country: null
- name: Remove an existing customer
  hosts: localhost
  tasks:
  - name: Remove customer
    waldur.structure.customer:
      state: absent
      name: My-Awesome-customer
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com

"""

RETURN = """
resource:
  description: The state of the customer after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    display_name:
      description: Display name
      type: str
      returned: always
      sample: string-value
    backend_id:
      description: Organization identifier in another application.
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    image:
      description: Image URL
      type: str
      returned: always
      sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    blocked:
      description: Blocked
      type: bool
      returned: always
      sample: true
    archived:
      description: Archived
      type: bool
      returned: always
      sample: true
    default_tax_percent:
      description: Default tax percent
      type: str
      returned: always
      sample: '12.34'
    accounting_start_date:
      description: Accounting start date
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    projects_count:
      description: Projects count
      type: int
      returned: always
      sample: 123
    sponsor_number:
      description: External ID of the sponsor covering the costs
      type: int
      returned: always
      sample: 123
    country_name:
      description: Country name
      type: str
      returned: always
      sample: string-value
    max_service_accounts:
      description: Maximum number of service accounts allowed
      type: int
      returned: always
      sample: 123
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-Resource
    slug:
      description: Slug
      type: str
      returned: always
      sample: string-value
    native_name:
      description: Native name
      type: str
      returned: always
      sample: string-value
    abbreviation:
      description: Abbreviation
      type: str
      returned: always
      sample: string-value
    contact_details:
      description: Contact details
      type: str
      returned: always
      sample: string-value
    agreement_number:
      description: Agreement number
      type: str
      returned: always
      sample: string-value
    email:
      description: Email
      type: str
      returned: always
      sample: alice@example.com
    phone_number:
      description: Phone number
      type: str
      returned: always
      sample: +1-202-555-0104
    access_subnets:
      description: Enter a comma separated list of IPv4 or IPv6 CIDR addresses from where connection to self-service is allowed.
      type: str
      returned: always
      sample: string-value
    registration_code:
      description: Registration code
      type: str
      returned: always
      sample: string-value
    homepage:
      description: Homepage URL
      type: str
      returned: always
      sample: https://api.example.com/api/homepage/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    domain:
      description: Domain
      type: str
      returned: always
      sample: string-value
    vat_code:
      description: VAT number
      type: str
      returned: always
      sample: string-value
    postal:
      description: Postal
      type: str
      returned: always
      sample: string-value
    address:
      description: Address
      type: str
      returned: always
      sample: string-value
    bank_name:
      description: Bank name
      type: str
      returned: always
      sample: string-value
    latitude:
      description: Latitude
      type: float
      returned: always
      sample: 123.45
    longitude:
      description: Longitude
      type: float
      returned: always
      sample: 123.45
    bank_account:
      description: Bank account
      type: str
      returned: always
      sample: string-value
    country:
      description: Country
      type: str
      returned: always
      sample: null
    payment_profiles:
      description: A list of payment profiles items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        organization_uuid:
          description: Organization UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        organization:
          description: Organization URL
          type: str
          returned: always
          sample: https://api.example.com/api/organization/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        attributes:
          description: Attributes
          type: dict
          returned: always
          sample: {}
          contains:
            end_date:
              description: End date
              type: str
              returned: always
              sample: string-value
            agreement_number:
              description: Agreement number
              type: str
              returned: always
              sample: string-value
            contract_sum:
              description: Contract sum
              type: int
              returned: always
              sample: 123
        payment_type:
          description: Payment type
          type: str
          returned: always
          sample: fixed_price
        payment_type_display:
          description: Payment type display
          type: str
          returned: always
          sample: string-value
        is_active:
          description: Is active
          type: bool
          returned: always
          sample: true
    customer_credit:
      description: Customer credit
      type: float
      returned: always
      sample: 123.45
    customer_unallocated_credit:
      description: Customer unallocated credit
      type: float
      returned: always
      sample: 123.45
    is_service_provider:
      description: Is service provider
      type: bool
      returned: always
      sample: true
    service_provider:
      description: Service provider URL
      type: str
      returned: always
      sample: https://api.example.com/api/service-provider/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_provider_uuid:
      description: Service provider UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    call_managing_organization_uuid:
      description: Call managing organization UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    billing_price_estimate:
      description: Billing price estimate
      type: str
      returned: always
      sample: null

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "required": False, "choices": ["present", "absent"]},
    "name": {"type": "str", "required": True},
    "backend_id": {"type": "str", "required": False},
    "image": {"type": "str", "required": False},
    "native_name": {"type": "str", "required": False},
    "abbreviation": {"type": "str", "required": False},
    "contact_details": {"type": "str", "required": False},
    "email": {"type": "str", "required": False},
    "phone_number": {"type": "str", "required": False},
    "registration_code": {"type": "str", "required": False},
    "homepage": {"type": "str", "required": False},
    "vat_code": {"type": "str", "required": False},
    "postal": {"type": "str", "required": False},
    "address": {"type": "str", "required": False},
    "bank_name": {"type": "str", "required": False},
    "latitude": {"type": "float", "required": False},
    "longitude": {"type": "float", "required": False},
    "bank_account": {"type": "str", "required": False},
    "country": {
        "type": "str",
        "required": False,
        "choices": [
            "AL",
            "AT",
            "BE",
            "BG",
            "BA",
            "CH",
            "CY",
            "CZ",
            "DE",
            "DK",
            "ES",
            "EE",
            "FI",
            "FR",
            "GB",
            "GE",
            "GR",
            "HR",
            "HU",
            "IE",
            "IS",
            "IT",
            "LT",
            "LU",
            "LV",
            "MC",
            "MK",
            "MT",
            "NL",
            "NO",
            "PL",
            "PT",
            "RO",
            "RS",
            "SK",
            "SI",
            "SE",
            "UA",
            "EU",
            "",
        ],
    },
}

RUNNER_CONTEXT = {
    "resource_type": "customer",
    "list_path": "/api/customers/",
    "create_path": "/api/customers/",
    "destroy_path": "/api/customers/{uuid}/",
    "update_path": None,
    "model_param_names": [
        "abbreviation",
        "address",
        "backend_id",
        "bank_account",
        "bank_name",
        "contact_details",
        "country",
        "email",
        "homepage",
        "image",
        "latitude",
        "longitude",
        "name",
        "native_name",
        "phone_number",
        "postal",
        "registration_code",
        "vat_code",
    ],
    "path_param_maps": {},
    "update_fields": [],
    "update_actions": {},
    "resolvers": {},
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = CrudRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
