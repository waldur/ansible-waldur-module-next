#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.structure.plugins.module_utils.waldur.crud_runner import (
    CrudRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: customer
short_description: Manage customer resources.
description: 'When the resource already exists, the following fields can be updated: abbreviation, address, backend_id, bank_account, bank_name, contact_details, country, description, email, homepage, image, latitude, longitude, name, native_name, notification_emails, phone_number, postal, registration_code, slug, vat_code.'
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  wait:
    description: A boolean value that defines whether to wait for the async action to complete.
    default: true
    type: bool
  timeout:
    description: The maximum number of seconds to wait for the async action to complete.
    default: 600
    type: int
  interval:
    description: The interval in seconds for polling the async action status.
    default: 20
    type: int
  name:
    description: The name of the customer.
    type: str
    required: true
  backend_id:
    type: str
    required: false
    description: Organization identifier in another application.
  image:
    type: str
    required: false
    description: Image
  slug:
    type: str
    required: false
    description: Slug
  native_name:
    type: str
    required: false
    description: Native name
  abbreviation:
    type: str
    required: false
    description: Abbreviation
  description:
    type: str
    required: false
    description: Description
  contact_details:
    type: str
    required: false
    description: Contact details
  email:
    type: str
    required: false
    description: Email
  phone_number:
    type: str
    required: false
    description: Phone number
  registration_code:
    type: str
    required: false
    description: Registration code
  homepage:
    type: str
    required: false
    description: Homepage
  vat_code:
    type: str
    required: false
    description: VAT number
  postal:
    type: str
    required: false
    description: Postal
  address:
    type: str
    required: false
    description: Address
  bank_name:
    type: str
    required: false
    description: Bank name
  latitude:
    type: float
    required: false
    description: Latitude
  longitude:
    type: float
    required: false
    description: Longitude
  bank_account:
    type: str
    required: false
    description: Bank account
  country:
    type: str
    required: false
    description: Country
    choices:
    - AW
    - AF
    - AO
    - AI
    - AX
    - AL
    - AD
    - AE
    - AR
    - AM
    - AS
    - AQ
    - TF
    - AG
    - AU
    - AT
    - AZ
    - BI
    - BE
    - BJ
    - BQ
    - BF
    - BD
    - BG
    - BH
    - BS
    - BA
    - BL
    - BY
    - BZ
    - BM
    - BO
    - BR
    - BB
    - BN
    - BT
    - BV
    - BW
    - CF
    - CA
    - CC
    - CH
    - CL
    - CN
    - CI
    - CM
    - CD
    - CG
    - CK
    - CO
    - KM
    - CV
    - CR
    - CU
    - CW
    - CX
    - KY
    - CY
    - CZ
    - DE
    - DJ
    - DM
    - DK
    - DO
    - DZ
    - EC
    - EG
    - ER
    - EH
    - ES
    - EE
    - ET
    - FI
    - FJ
    - FK
    - FR
    - FO
    - FM
    - GA
    - GB
    - GE
    - GG
    - GH
    - GI
    - GN
    - GP
    - GM
    - GW
    - GQ
    - GR
    - GD
    - GL
    - GT
    - GF
    - GU
    - GY
    - HK
    - HM
    - HN
    - HR
    - HT
    - HU
    - ID
    - IM
    - IN
    - IO
    - IE
    - IR
    - IQ
    - IS
    - IL
    - IT
    - JM
    - JE
    - JO
    - JP
    - KZ
    - KE
    - KG
    - KH
    - KI
    - KN
    - KR
    - KW
    - LA
    - LB
    - LR
    - LY
    - LC
    - LI
    - LK
    - LS
    - LT
    - LU
    - LV
    - MO
    - MF
    - MA
    - MC
    - MD
    - MG
    - MV
    - MX
    - MH
    - MK
    - ML
    - MT
    - MM
    - ME
    - MN
    - MP
    - MZ
    - MR
    - MS
    - MQ
    - MU
    - MW
    - MY
    - YT
    - NA
    - NC
    - NE
    - NF
    - NG
    - NI
    - NU
    - NL
    - 'NO'
    - NP
    - NR
    - NZ
    - OM
    - PK
    - PA
    - PN
    - PE
    - PH
    - PW
    - PG
    - PL
    - PR
    - KP
    - PT
    - PY
    - PS
    - PF
    - QA
    - RE
    - RO
    - RU
    - RW
    - SA
    - SD
    - SN
    - SG
    - GS
    - SH
    - SJ
    - SB
    - SL
    - SV
    - SM
    - SO
    - PM
    - RS
    - SS
    - ST
    - SR
    - SK
    - SI
    - SE
    - SZ
    - SX
    - SC
    - SY
    - TC
    - TD
    - TG
    - TH
    - TJ
    - TK
    - TM
    - TL
    - TO
    - TT
    - TN
    - TR
    - TV
    - TW
    - TZ
    - UG
    - UA
    - UM
    - UY
    - US
    - UZ
    - VA
    - VC
    - VE
    - VG
    - VI
    - VN
    - VU
    - WF
    - WS
    - YE
    - ZA
    - ZM
    - ZW
    - EU
    - ''
  notification_emails:
    type: str
    required: false
    description: Comma-separated list of notification email addresses
requirements:
- python >= 3.11

"""

EXAMPLES = """
- name: Create a new customer
  hosts: localhost
  tasks:
  - name: Add customer
    waldur.structure.customer:
      state: present
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com
      backend_id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
      image: string-value
      name: My-Awesome-customer
      slug: string-value
      native_name: string-value
      abbreviation: string-value
      description: A sample description created by Ansible.
      contact_details: string-value
      email: alice@example.com
      phone_number: +1-202-555-0104
      registration_code: string-value
      homepage: https://api.example.com/api/homepage/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
      vat_code: string-value
      postal: string-value
      address: string-value
      bank_name: string-value
      latitude: 123.45
      longitude: 123.45
      bank_account: string-value
      country: null
      notification_emails: alice@example.com
- name: Remove an existing customer
  hosts: localhost
  tasks:
  - name: Remove customer
    waldur.structure.customer:
      state: absent
      name: My-Awesome-customer
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com

"""

RETURN = """
resource:
  description: The state of the customer after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: URL URL
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    organization_groups:
      description: A list of organization groups items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        parent_uuid:
          description: Parent UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        parent_name:
          description: Parent name
          type: str
          returned: always
          sample: string-value
        parent:
          description: Parent URL
          type: str
          returned: always
          sample: https://api.example.com/api/parent/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        customers_count:
          description: Customers count
          type: int
          returned: always
          sample: 123
    display_name:
      description: Display name
      type: str
      returned: always
      sample: string-value
    projects:
      description: A list of projects items.
      type: list
      returned: always
      sample: []
      contains:
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        image:
          description: Image URL
          type: str
          returned: always
          sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        resource_count:
          description: Resource count
          type: int
          returned: always
          sample: 123
        end_date:
          description: The date is inclusive. Once reached, all project resource will be scheduled for termination.
          type: str
          returned: always
          sample: '2023-10-01'
    backend_id:
      description: Organization identifier in another application.
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    image:
      description: Image URL
      type: str
      returned: always
      sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    blocked:
      description: Blocked
      type: bool
      returned: always
      sample: true
    archived:
      description: Archived
      type: bool
      returned: always
      sample: true
    display_billing_info_in_projects:
      description: Display billing info in projects
      type: bool
      returned: always
      sample: true
    default_tax_percent:
      description: Default tax percent
      type: str
      returned: always
      sample: '12.34'
    accounting_start_date:
      description: Accounting start date
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    projects_count:
      description: Projects count
      type: int
      returned: always
      sample: 123
    users_count:
      description: Users count
      type: int
      returned: always
      sample: 123
    sponsor_number:
      description: External ID of the sponsor covering the costs
      type: int
      returned: always
      sample: 123
    country_name:
      description: Country name
      type: str
      returned: always
      sample: string-value
    max_service_accounts:
      description: Maximum number of service accounts allowed
      type: int
      returned: always
      sample: 123
    project_metadata_checklist:
      description: Project metadata checklist
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My-Awesome-Resource
    slug:
      description: Slug
      type: str
      returned: always
      sample: string-value
    native_name:
      description: Native name
      type: str
      returned: always
      sample: string-value
    abbreviation:
      description: Abbreviation
      type: str
      returned: always
      sample: string-value
    description:
      description: Description
      type: str
      returned: always
      sample: A sample description created by Ansible.
    contact_details:
      description: Contact details
      type: str
      returned: always
      sample: string-value
    agreement_number:
      description: Agreement number
      type: str
      returned: always
      sample: string-value
    email:
      description: Email
      type: str
      returned: always
      sample: alice@example.com
    phone_number:
      description: Phone number
      type: str
      returned: always
      sample: +1-202-555-0104
    access_subnets:
      description: Enter a comma separated list of IPv4 or IPv6 CIDR addresses from where connection to self-service is allowed.
      type: str
      returned: always
      sample: string-value
    registration_code:
      description: Registration code
      type: str
      returned: always
      sample: string-value
    homepage:
      description: Homepage URL
      type: str
      returned: always
      sample: https://api.example.com/api/homepage/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    domain:
      description: Domain
      type: str
      returned: always
      sample: string-value
    vat_code:
      description: VAT number
      type: str
      returned: always
      sample: string-value
    postal:
      description: Postal
      type: str
      returned: always
      sample: string-value
    address:
      description: Address
      type: str
      returned: always
      sample: string-value
    bank_name:
      description: Bank name
      type: str
      returned: always
      sample: string-value
    latitude:
      description: Latitude
      type: float
      returned: always
      sample: 123.45
    longitude:
      description: Longitude
      type: float
      returned: always
      sample: 123.45
    bank_account:
      description: Bank account
      type: str
      returned: always
      sample: string-value
    country:
      description: Country
      type: str
      returned: always
      sample: null
    notification_emails:
      description: Comma-separated list of notification email addresses
      type: str
      returned: always
      sample: alice@example.com
    payment_profiles:
      description: A list of payment profiles items.
      type: list
      returned: always
      sample: []
      contains:
        uuid:
          description: UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        url:
          description: URL URL
          type: str
          returned: always
          sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        name:
          description: Name
          type: str
          returned: always
          sample: My-Awesome-Resource
        organization_uuid:
          description: Organization UUID
          type: str
          returned: always
          sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
        organization:
          description: Organization URL
          type: str
          returned: always
          sample: https://api.example.com/api/organization/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
        attributes:
          description: Attributes
          type: dict
          returned: always
          sample: {}
          contains:
            end_date:
              description: End date
              type: str
              returned: always
              sample: string-value
            agreement_number:
              description: Agreement number
              type: str
              returned: always
              sample: string-value
            contract_sum:
              description: Contract sum
              type: int
              returned: always
              sample: 123
        payment_type:
          description: Payment type
          type: str
          returned: always
          sample: fixed_price
        payment_type_display:
          description: Payment type display
          type: str
          returned: always
          sample: string-value
        is_active:
          description: Is active
          type: bool
          returned: always
          sample: true
    customer_credit:
      description: Customer credit
      type: float
      returned: always
      sample: 123.45
    customer_unallocated_credit:
      description: Customer unallocated credit
      type: float
      returned: always
      sample: 123.45
    is_service_provider:
      description: Is service provider
      type: bool
      returned: always
      sample: true
    service_provider:
      description: Service provider URL
      type: str
      returned: always
      sample: https://api.example.com/api/service-provider/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_provider_uuid:
      description: Service provider UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    call_managing_organization_uuid:
      description: Call managing organization UUID
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    billing_price_estimate:
      description: Billing price estimate
      type: str
      returned: always
      sample: null
commands:
  description: A list of HTTP requests that were made (or would be made in check mode) to execute the task.
  type: list
  returned: when changed
  elements: dict
  contains:
    method:
      description: The HTTP method used (e.g., POST, PATCH, DELETE).
      type: str
      sample: POST
    url:
      description: The fully qualified URL of the API endpoint.
      type: str
      sample: https://api.example.com/api/projects/
    description:
      description: A human-readable summary of the command's purpose.
      type: str
      sample: Create new project
    body:
      description: The JSON payload sent with the request. Only present for methods with a body.
      type: dict
      returned: if applicable
      sample:
        name: My-Awesome-Project

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "no_log": True, "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "choices": ["present", "absent"], "default": "present"},
    "wait": {"type": "bool", "default": True},
    "timeout": {"type": "int", "default": 600},
    "interval": {"type": "int", "default": 20},
    "name": {"type": "str", "required": True},
    "backend_id": {"type": "str"},
    "image": {"type": "str"},
    "slug": {"type": "str"},
    "native_name": {"type": "str"},
    "abbreviation": {"type": "str"},
    "description": {"type": "str"},
    "contact_details": {"type": "str"},
    "email": {"type": "str"},
    "phone_number": {"type": "str"},
    "registration_code": {"type": "str"},
    "homepage": {"type": "str"},
    "vat_code": {"type": "str"},
    "postal": {"type": "str"},
    "address": {"type": "str"},
    "bank_name": {"type": "str"},
    "latitude": {"type": "float"},
    "longitude": {"type": "float"},
    "bank_account": {"type": "str"},
    "country": {
        "type": "str",
        "choices": [
            "AW",
            "AF",
            "AO",
            "AI",
            "AX",
            "AL",
            "AD",
            "AE",
            "AR",
            "AM",
            "AS",
            "AQ",
            "TF",
            "AG",
            "AU",
            "AT",
            "AZ",
            "BI",
            "BE",
            "BJ",
            "BQ",
            "BF",
            "BD",
            "BG",
            "BH",
            "BS",
            "BA",
            "BL",
            "BY",
            "BZ",
            "BM",
            "BO",
            "BR",
            "BB",
            "BN",
            "BT",
            "BV",
            "BW",
            "CF",
            "CA",
            "CC",
            "CH",
            "CL",
            "CN",
            "CI",
            "CM",
            "CD",
            "CG",
            "CK",
            "CO",
            "KM",
            "CV",
            "CR",
            "CU",
            "CW",
            "CX",
            "KY",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DM",
            "DK",
            "DO",
            "DZ",
            "EC",
            "EG",
            "ER",
            "EH",
            "ES",
            "EE",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FR",
            "FO",
            "FM",
            "GA",
            "GB",
            "GE",
            "GG",
            "GH",
            "GI",
            "GN",
            "GP",
            "GM",
            "GW",
            "GQ",
            "GR",
            "GD",
            "GL",
            "GT",
            "GF",
            "GU",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IM",
            "IN",
            "IO",
            "IE",
            "IR",
            "IQ",
            "IS",
            "IL",
            "IT",
            "JM",
            "JE",
            "JO",
            "JP",
            "KZ",
            "KE",
            "KG",
            "KH",
            "KI",
            "KN",
            "KR",
            "KW",
            "LA",
            "LB",
            "LR",
            "LY",
            "LC",
            "LI",
            "LK",
            "LS",
            "LT",
            "LU",
            "LV",
            "MO",
            "MF",
            "MA",
            "MC",
            "MD",
            "MG",
            "MV",
            "MX",
            "MH",
            "MK",
            "ML",
            "MT",
            "MM",
            "ME",
            "MN",
            "MP",
            "MZ",
            "MR",
            "MS",
            "MQ",
            "MU",
            "MW",
            "MY",
            "YT",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NU",
            "NL",
            "NO",
            "NP",
            "NR",
            "NZ",
            "OM",
            "PK",
            "PA",
            "PN",
            "PE",
            "PH",
            "PW",
            "PG",
            "PL",
            "PR",
            "KP",
            "PT",
            "PY",
            "PS",
            "PF",
            "QA",
            "RE",
            "RO",
            "RU",
            "RW",
            "SA",
            "SD",
            "SN",
            "SG",
            "GS",
            "SH",
            "SJ",
            "SB",
            "SL",
            "SV",
            "SM",
            "SO",
            "PM",
            "RS",
            "SS",
            "ST",
            "SR",
            "SK",
            "SI",
            "SE",
            "SZ",
            "SX",
            "SC",
            "SY",
            "TC",
            "TD",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TM",
            "TL",
            "TO",
            "TT",
            "TN",
            "TR",
            "TV",
            "TW",
            "TZ",
            "UG",
            "UA",
            "UM",
            "UY",
            "US",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "ZA",
            "ZM",
            "ZW",
            "EU",
            "",
        ],
    },
    "notification_emails": {"type": "str"},
}

RUNNER_CONTEXT = {
    "resource_type": "customer",
    "check_url": "/api/customers/",
    "check_filter_keys": {},
    "list_path": "/api/customers/",
    "create_path": "/api/customers/",
    "destroy_path": "/api/customers/{uuid}/",
    "update_path": "/api/customers/{uuid}/",
    "required_for_create": ["name"],
    "model_param_names": [
        "abbreviation",
        "address",
        "backend_id",
        "bank_account",
        "bank_name",
        "contact_details",
        "country",
        "description",
        "email",
        "homepage",
        "image",
        "latitude",
        "longitude",
        "name",
        "native_name",
        "notification_emails",
        "phone_number",
        "postal",
        "registration_code",
        "slug",
        "vat_code",
    ],
    "path_param_maps": {},
    "update_fields": [
        "abbreviation",
        "address",
        "backend_id",
        "bank_account",
        "bank_name",
        "contact_details",
        "country",
        "description",
        "email",
        "homepage",
        "image",
        "latitude",
        "longitude",
        "name",
        "native_name",
        "notification_emails",
        "phone_number",
        "postal",
        "registration_code",
        "slug",
        "vat_code",
    ],
    "update_actions": {},
    "resolvers": {},
    "resolver_order": [],
    "resource_detail_path": "/api/customers/{uuid}/",
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = CrudRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
