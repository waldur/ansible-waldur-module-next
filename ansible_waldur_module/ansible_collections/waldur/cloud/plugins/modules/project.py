#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.cloud.plugins.module_utils.waldur.crud_runner import (
    CrudRunner,
)

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: project
short_description: Manage project
description:
- Manage project
author: Waldur Team
options:
  access_token:
    description: An access token.
    required: true
    type: str
    no_log: true
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    default: present
    type: str
  name:
    name: name
    type: str
    required: true
    description: Name
    is_resolved: false
    choices: null
  customer:
    name: customer
    type: str
    required: true
    description: The name or UUID of the customer. Customer
    is_resolved: true
    choices: null
  description:
    name: description
    type: str
    required: false
    description: Description
    is_resolved: false
    choices: null
  type:
    name: type
    type: str
    required: false
    description: The name or UUID of the type. Type
    is_resolved: true
    choices: null
  backend_id:
    name: backend_id
    type: str
    required: false
    description: Backend id
    is_resolved: false
    choices: null
  start_date:
    name: start_date
    type: str
    required: false
    description: Start date
    is_resolved: false
    choices: null
  end_date:
    name: end_date
    type: str
    required: false
    description: The date is inclusive. Once reached, all project resource will be scheduled for termination.
    is_resolved: false
    choices: null
  oecd_fos_2007_code:
    name: oecd_fos_2007_code
    type: str
    required: false
    description: Oecd fos 2007 code
    is_resolved: false
    choices:
    - '1.1'
    - '1.2'
    - '1.3'
    - '1.4'
    - '1.5'
    - '1.6'
    - '1.7'
    - '2.1'
    - '2.2'
    - '2.3'
    - '2.4'
    - '2.5'
    - '2.6'
    - '2.7'
    - '2.8'
    - '2.9'
    - '2.10'
    - '2.11'
    - '2.12'
    - '3.1'
    - '3.2'
    - '3.3'
    - '3.4'
    - '3.5'
    - '4.1'
    - '4.2'
    - '4.3'
    - '4.4'
    - '4.5'
    - '5.1'
    - '5.2'
    - '5.3'
    - '5.4'
    - '5.5'
    - '5.6'
    - '5.7'
    - '5.8'
    - '5.9'
    - '6.1'
    - '6.2'
    - '6.3'
    - '6.4'
    - '6.5'
    - ''
  is_industry:
    name: is_industry
    type: bool
    required: false
    description: Is industry
    is_resolved: false
    choices: null
  image:
    name: image
    type: str
    required: false
    description: Image
    is_resolved: false
    choices: null
requirements:
- python >= 3.11
- requests

"""

EXAMPLES = """
- name: Create a new project.
  hosts: localhost
  tasks:
  - name: Add project
    waldur.cloud.project:
      access_token: some_value
      api_url: some_value
      state: present
      name: My Awesome Project
      customer: Customer Name or UUID
- name: Remove an existing project.
  hosts: localhost
  tasks:
  - name: Remove project
    waldur.cloud.project:
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com:8000/api
      state: absent

"""

RETURN = """
resource:
  description: The state of the project after the operation.
  type: dict
  returned: on success
  contains:
    url:
      description: Url
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: Uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My Awesome Resource
    slug:
      description: Slug
      type: str
      returned: always
      sample: string-value
    customer:
      description: Customer
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_uuid:
      description: Customer uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_slug:
      description: Customer slug
      type: str
      returned: always
      sample: string-value
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    description:
      description: Description
      type: str
      returned: always
      sample: This is a sample description for the resource.
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    type:
      description: Type
      type: str
      returned: always
      sample: https://api.example.com/api/type/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    type_name:
      description: Type name
      type: str
      returned: always
      sample: string-value
    type_uuid:
      description: Type uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    backend_id:
      description: Backend id
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    start_date:
      description: Start date
      type: str
      returned: always
      sample: '2023-10-01'
    end_date:
      description: The date is inclusive. Once reached, all project resource will be scheduled for termination.
      type: str
      returned: always
      sample: '2023-10-01'
    end_date_requested_by:
      description: End date requested by
      type: str
      returned: always
      sample: https://api.example.com/api/users/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    oecd_fos_2007_code:
      description: Oecd fos 2007 code
      type: str
      returned: always
      sample: null
    oecd_fos_2007_label:
      description: Oecd fos 2007 label
      type: str
      returned: always
      sample: string-value
    is_industry:
      description: Is industry
      type: bool
      returned: always
      sample: true
    image:
      description: Image
      type: str
      returned: always
      sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    resources_count:
      description: Resources count
      type: int
      returned: always
      sample: 123
    max_service_accounts:
      description: Maximum number of service accounts allowed
      type: int
      returned: always
      sample: 123
    project_credit:
      description: Project credit
      type: float
      returned: always
      sample: 123.45
    marketplace_resource_count:
      description: Marketplace resource count
      type: dict
      returned: always
      sample: {}
    billing_price_estimate:
      description: ''
      type: dict
      returned: always
      sample: {}
      contains:
        total:
          description: Total
          type: str
          returned: always
          sample: '12.34'
        current:
          description: Current
          type: str
          returned: always
          sample: '12.34'
        tax:
          description: Tax
          type: str
          returned: always
          sample: '12.34'
        tax_current:
          description: Tax current
          type: str
          returned: always
          sample: '12.34'

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "required": False, "choices": ["present", "absent"]},
    "name": {"type": "str", "required": True},
    "customer": {"type": "str", "required": True},
    "description": {"type": "str", "required": False},
    "type": {"type": "str", "required": False},
    "backend_id": {"type": "str", "required": False},
    "start_date": {"type": "str", "required": False},
    "end_date": {"type": "str", "required": False},
    "oecd_fos_2007_code": {
        "type": "str",
        "required": False,
        "choices": [
            "1.1",
            "1.2",
            "1.3",
            "1.4",
            "1.5",
            "1.6",
            "1.7",
            "2.1",
            "2.2",
            "2.3",
            "2.4",
            "2.5",
            "2.6",
            "2.7",
            "2.8",
            "2.9",
            "2.10",
            "2.11",
            "2.12",
            "3.1",
            "3.2",
            "3.3",
            "3.4",
            "3.5",
            "4.1",
            "4.2",
            "4.3",
            "4.4",
            "4.5",
            "5.1",
            "5.2",
            "5.3",
            "5.4",
            "5.5",
            "5.6",
            "5.7",
            "5.8",
            "5.9",
            "6.1",
            "6.2",
            "6.3",
            "6.4",
            "6.5",
            "",
        ],
    },
    "is_industry": {"type": "bool", "required": False},
    "image": {"type": "str", "required": False},
}

RUNNER_CONTEXT = {
    "resource_type": "project",
    "api_path": "/api/projects/",
    "model_param_names": [
        "name",
        "customer",
        "description",
        "type",
        "backend_id",
        "start_date",
        "end_date",
        "oecd_fos_2007_code",
        "is_industry",
        "image",
    ],
    "resolvers": {
        "customer": {"url": "/api/customers/", "error_message": None},
        "type": {"url": "/api/project-types/", "error_message": None},
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = CrudRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
