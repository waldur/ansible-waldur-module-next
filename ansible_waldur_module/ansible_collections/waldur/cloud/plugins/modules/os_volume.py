#!/usr/bin/python
#
# THIS FILE IS AUTOGENERATED BY THE ANSIBLE MODULE GENERATOR - DO NOT EDIT
#
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.waldur.cloud.plugins.module_utils.waldur.order_runner import (
    OrderRunner,
)
from waldur_api_client.api.marketplace_orders import marketplace_orders_create
from waldur_api_client.api.marketplace_orders import marketplace_orders_retrieve
from waldur_api_client.api.marketplace_public_offerings import (
    marketplace_public_offerings_list,
)
from waldur_api_client.api.marketplace_public_offerings import (
    marketplace_public_offerings_retrieve,
)
from waldur_api_client.api.marketplace_resources import marketplace_resources_terminate
from waldur_api_client.api.openstack_volume_types import openstack_volume_types_list
from waldur_api_client.api.openstack_volume_types import openstack_volume_types_retrieve
from waldur_api_client.api.openstack_volumes import openstack_volumes_list
from waldur_api_client.api.openstack_volumes import openstack_volumes_update
from waldur_api_client.models import OrderCreateRequest
from waldur_api_client.models import ResourceTerminateRequest
from waldur_api_client.models.open_stack_volume_request import OpenStackVolumeRequest

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "OpenNode",
}

DOCUMENTATION = """
---
module: waldur.cloud.os_volume
short_description: Create, update, or delete an OpenStack Volume via the marketplace.
version_added: '0.1'
description:
- Create, update, or delete an OpenStack Volume via the marketplace.
requirements:
- python = 3.11
- waldur-api-client
options:
  access_token:
    description: An access token.
    required: true
    type: str
  api_url:
    description: Fully qualified URL to the API.
    required: true
    type: str
  state:
    description: Should the resource be present or absent.
    choices:
    - present
    - absent
    type: str
    required: false
  wait:
    description: A boolean value that defines whether to wait for the order to complete.
    type: bool
    required: false
  timeout:
    description: The maximum number of seconds to wait for the order to complete.
    type: int
    required: false
  interval:
    description: The interval in seconds for polling the order status.
    type: int
    required: false
  name:
    type: str
    required: true
    description: The name of the OpenStack volume.
  project:
    type: str
    required: true
    description: The name or UUID of the project.
  offering:
    type: str
    required: true
    description: The name or UUID of the marketplace offering.
  description:
    type: str
    required: false
    description: A description for the OpenStack volume.
  size:
    type: str
    required: true
    description: The size of the volume in gigabytes (GB).
  type:
    type: str
    required: false
    description: The name or UUID of the type. The name or UUID of the volume type (e.g., 'lvm', 'ssd').

"""

EXAMPLES = """
- name: Create a new OpenStack volume
  hosts: localhost
  tasks:
  - name: Add OpenStack volume
    waldur.cloud.os_volume:
      access_token: some_value
      api_url: some_value
      state: present
      name: My-Awesome-OpenStack-volume
      project: Cloud Project
      offering: Standard Volume Offering
      size: 10
- name: Update an existing OpenStack volume
  hosts: localhost
  tasks:
  - name: Update the description of a OpenStack volume
    waldur.cloud.os_volume:
      name: My-Awesome-OpenStack-volume
      project: Cloud Project
      state: present
      description: A new updated description for the resource.
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com/api
- name: Remove an existing OpenStack volume
  hosts: localhost
  tasks:
  - name: Remove OpenStack volume
    waldur.cloud.os_volume:
      name: My-Awesome-OpenStack-volume
      project: Cloud Project
      state: absent
      access_token: b83557fd8e2066e98f27dee8f3b3433cdc4183ce
      api_url: https://waldur.example.com/api

"""

RETURN = """
resource:
  description: A dictionary describing the OpenStack volume after a successful 'present' state.
  type: dict
  returned: on success when state is 'present'
  contains:
    url:
      description: Url
      type: str
      returned: always
      sample: https://api.example.com/api/url/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    uuid:
      description: Uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    name:
      description: Name
      type: str
      returned: always
      sample: My Awesome Resource
    description:
      description: Description
      type: str
      returned: always
      sample: This is a sample description for the resource.
    service_name:
      description: Service name
      type: str
      returned: always
      sample: string-value
    service_settings:
      description: Service settings
      type: str
      returned: always
      sample: https://api.example.com/api/service-settings/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    service_settings_uuid:
      description: Service settings uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    service_settings_state:
      description: Service settings state
      type: str
      returned: always
      sample: string-value
    service_settings_error_message:
      description: Service settings error message
      type: str
      returned: always
      sample: string-value
    project:
      description: Project
      type: str
      returned: always
      sample: https://api.example.com/api/project/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    project_name:
      description: Project name
      type: str
      returned: always
      sample: Internal Research Project
    project_uuid:
      description: Project uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    customer:
      description: Customer
      type: str
      returned: always
      sample: https://api.example.com/api/customer/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    customer_name:
      description: Customer name
      type: str
      returned: always
      sample: Big Corp Inc.
    customer_native_name:
      description: Customer native name
      type: str
      returned: always
      sample: string-value
    customer_abbreviation:
      description: Customer abbreviation
      type: str
      returned: always
      sample: string-value
    error_message:
      description: Error message
      type: str
      returned: always
      sample: string-value
    error_traceback:
      description: Error traceback
      type: str
      returned: always
      sample: string-value
    resource_type:
      description: Resource type
      type: str
      returned: always
      sample: string-value
    state:
      description: ''
      type: str
      returned: always
      sample: CREATION_SCHEDULED
    created:
      description: Created
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    modified:
      description: Modified
      type: str
      returned: always
      sample: '2023-10-01T12:00:00Z'
    backend_id:
      description: Backend id
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    access_url:
      description: Access url
      type: str
      returned: always
      sample: string-value
    source_snapshot:
      description: Source snapshot
      type: str
      returned: always
      sample: https://api.example.com/api/source-snapshot/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    size:
      description: Size in MiB
      type: int
      returned: always
      sample: 100
    bootable:
      description: Bootable
      type: bool
      returned: always
      sample: true
    metadata:
      description: Metadata
      type: str
      returned: always
      sample: null
    image:
      description: Image
      type: str
      returned: always
      sample: https://api.example.com/api/image/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    image_metadata:
      description: Image metadata
      type: str
      returned: always
      sample: string-value
    image_name:
      description: Image name
      type: str
      returned: always
      sample: string-value
    type:
      description: Type
      type: str
      returned: always
      sample: https://api.example.com/api/type/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    type_name:
      description: Type name
      type: str
      returned: always
      sample: string-value
    runtime_state:
      description: Runtime state
      type: str
      returned: always
      sample: string-value
    availability_zone:
      description: Availability zone
      type: str
      returned: always
      sample: https://api.example.com/api/availability-zone/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    availability_zone_name:
      description: Availability zone name
      type: str
      returned: always
      sample: string-value
    device:
      description: Name of volume as instance device e.g. /dev/vdb.
      type: str
      returned: always
      sample: string-value
    action:
      description: Action
      type: str
      returned: always
      sample: string-value
    action_details:
      description: Action details
      type: str
      returned: always
      sample: null
    instance:
      description: Instance
      type: str
      returned: always
      sample: https://api.example.com/api/instance/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    instance_name:
      description: Instance name
      type: str
      returned: always
      sample: string-value
    instance_marketplace_uuid:
      description: Instance marketplace uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    tenant:
      description: Tenant
      type: str
      returned: always
      sample: https://api.example.com/api/tenant/a1b2c3d4-e5f6-7890-abcd-ef1234567890/
    tenant_uuid:
      description: Tenant uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    extend_enabled:
      description: Extend enabled
      type: bool
      returned: always
      sample: true
    marketplace_offering_uuid:
      description: Marketplace offering uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_offering_name:
      description: Marketplace offering name
      type: str
      returned: always
      sample: string-value
    marketplace_offering_plugin_options:
      description: Marketplace offering plugin options
      type: dict
      returned: always
      sample: {}
    marketplace_category_uuid:
      description: Marketplace category uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_category_name:
      description: Marketplace category name
      type: str
      returned: always
      sample: string-value
    marketplace_resource_uuid:
      description: Marketplace resource uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_plan_uuid:
      description: Marketplace plan uuid
      type: str
      returned: always
      sample: a1b2c3d4-e5f6-7890-abcd-ef1234567890
    marketplace_resource_state:
      description: Marketplace resource state
      type: str
      returned: always
      sample: string-value
    is_usage_based:
      description: Is usage based
      type: bool
      returned: always
      sample: true
    is_limit_based:
      description: Is limit based
      type: bool
      returned: always
      sample: true

"""

ARGUMENT_SPEC = {
    "access_token": {"type": "str", "required": True},
    "api_url": {"type": "str", "required": True},
    "state": {"type": "str", "required": False, "choices": ["present", "absent"]},
    "wait": {"type": "bool", "required": False},
    "timeout": {"type": "int", "required": False},
    "interval": {"type": "int", "required": False},
    "name": {"type": "str", "required": True},
    "project": {"type": "str", "required": True},
    "offering": {"type": "str", "required": True},
    "description": {"type": "str", "required": False},
    "size": {"type": "str", "required": True},
    "type": {"type": "str", "required": False},
}

RUNNER_CONTEXT = {
    "resource_type": "OpenStack volume",
    "existence_check_func": openstack_volumes_list,
    "existence_check_filter_keys": {
        "project": "project_uuid",
    },
    "update_func": openstack_volumes_update,
    "update_model_class": OpenStackVolumeRequest,
    "update_check_fields": [
        "description",
    ],
    "order_create_func": marketplace_orders_create,
    "order_poll_func": marketplace_orders_retrieve,
    "terminate_func": marketplace_resources_terminate,
    "order_model_class": OrderCreateRequest,
    "terminate_model_class": ResourceTerminateRequest,
    "attribute_param_names": [
        "size",
        "type",
        "description",
    ],
    "resolvers": {
        "offering": {
            "list_func": marketplace_public_offerings_list,
            "retrieve_func": marketplace_public_offerings_retrieve,
            "error_message": "Offering '{value}' not found. Please check available offerings.",
        },
        "type": {
            "list_func": openstack_volume_types_list,
            "retrieve_func": openstack_volume_types_retrieve,
            "error_message": "Volume type '{value}' not found.",
        },
    },
}


def main():
    """Main execution entrypoint for the Ansible module."""
    module = AnsibleModule(
        argument_spec=ARGUMENT_SPEC,
        supports_check_mode=True,
    )
    runner = OrderRunner(module, RUNNER_CONTEXT)
    runner.run()


if __name__ == "__main__":
    main()
